/*
 * Copyright OpenSearch Contributors
 * SPDX-License-Identifier: Apache-2.0
 */

import initCommandNamespace from './command_namespace';
import { PATHS, INDEX_WITH_TIME_1, INDEX_PATTERN_WITH_TIME } from './constants';

initCommandNamespace(cy, 'coreQe');

export const DEFAULT_OPTIONS = {
  workspace: {
    name: `wksp-${Date.now()}`,
    description: 'Workspace generated by Cypress',
    features: ['use-case-observability'],
  },
  dataSource: {
    title: `ds-${Date.now()}`,
    description: 'Data source added by Cypress',
    auth: { type: 'no_auth' },
    endpoint: PATHS.ENGINE,
    dataSourceVersion: '2.14.0',
    dataSourceEngineType: 'OpenSearch',
  },
  fixture: {
    mappingPath: `query_enhancements/data_logs_1/${INDEX_WITH_TIME_1}.mapping.json`,
    dataPath: `query_enhancements/data_logs_1/${INDEX_WITH_TIME_1}.data.ndjson`,
  },
  index: INDEX_WITH_TIME_1,
  dataset: {
    title: INDEX_PATTERN_WITH_TIME,
    timeFieldName: 'timestamp',
    type: 'INDEX_PATTERN',
    fieldAttrs: '{}',
    fieldFormats: '{}',
    fields: JSON.stringify([
      {
        count: 0,
        name: 'category',
        type: 'string',
        esTypes: ['keyword'],
        scripted: false,
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
      },
      {
        count: 0,
        name: 'request_url',
        type: 'string',
        esTypes: ['keyword'],
        scripted: false,
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
      },
      {
        count: 0,
        name: 'service_endpoint',
        type: 'string',
        esTypes: ['keyword'],
        scripted: false,
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
      },
      {
        count: 0,
        name: 'status_code',
        type: 'number',
        esTypes: ['integer'],
        scripted: false,
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
      },
      {
        count: 0,
        name: 'timestamp',
        type: 'date',
        esTypes: ['date'],
        scripted: false,
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
      },
    ]),
  },
  search: {
    title: `ss-${Date.now()}`,
    description: 'Saved search created by Cypress',
    query: {
      query: `source = ${INDEX_PATTERN_WITH_TIME} | where category = "Network"`,
      language: 'PPL',
    },
    columns: ['_source'],
    sort: [['timestamp', 'desc']],
  },
};

cy.coreQe.add('selectDataset', (title) => {
  cy.log(`Selecting dataset: ${title}`);

  cy.intercept('GET', '**/api/assistant/agent_config*', (req) => {
    req.continue((res) => {
      if (res.statusCode === 404) {
        res.send(200, { status: 'ok', data: {} });
      }
    });
  }).as('agentConfigRequest');

  cy.getElementByTestId('datasetSelectorButton').should('be.visible').click();
  cy.get('[data-test-subj^="datasetSelectorOption-"]').contains(title).click();
  cy.getElementByTestId('datasetSelectorButton').should('contain.text', title);
  cy.wait(1000);
});
