// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getLogos when branding has both light and dark logos and only light spinners returns the correct logos 1`] = `
AnimatedMark.dark.type = "custom"
AnimatedMark.dark.url = "/custom/branded/spinner.svg"
AnimatedMark.light.type = "custom"
AnimatedMark.light.url = "/custom/branded/spinner.svg"
AnimatedMark.type = "custom"
AnimatedMark.url = "/custom/branded/spinner.svg"
Application.dark.type = "custom"
Application.dark.url = "/custom/branded/logo-darkmode.svg"
Application.light.type = "custom"
Application.light.url = "/custom/branded/logo.svg"
Application.type = "custom"
Application.url = "/custom/branded/logo.svg"
CenterMark.dark.type = "custom"
CenterMark.dark.url = "/custom/branded/mark-darkmode.svg"
CenterMark.light.type = "custom"
CenterMark.light.url = "/custom/branded/mark.svg"
CenterMark.type = "custom"
CenterMark.url = "/custom/branded/mark.svg"
Mark.dark.type = "custom"
Mark.dark.url = "/custom/branded/mark-darkmode.svg"
Mark.light.type = "custom"
Mark.light.url = "/custom/branded/mark.svg"
Mark.type = "custom"
Mark.url = "/custom/branded/mark.svg"
OpenSearch.dark.type = "custom"
OpenSearch.dark.url = "/custom/branded/logo-darkmode.svg"
OpenSearch.light.type = "custom"
OpenSearch.light.url = "/custom/branded/logo.svg"
OpenSearch.type = "custom"
OpenSearch.url = "/custom/branded/logo.svg"
colorScheme = "light"
`;

exports[`getLogos when branding has both light and dark logos and only light spinners returns the correct logos when dark color scheme is requested 1`] = `
AnimatedMark.dark.type = "custom"
AnimatedMark.dark.url = "/custom/branded/spinner.svg"
AnimatedMark.light.type = "custom"
AnimatedMark.light.url = "/custom/branded/spinner.svg"
AnimatedMark.type = "custom"
AnimatedMark.url = "/custom/branded/spinner.svg"
Application.dark.type = "custom"
Application.dark.url = "/custom/branded/logo-darkmode.svg"
Application.light.type = "custom"
Application.light.url = "/custom/branded/logo.svg"
Application.type = "custom"
Application.url = "/custom/branded/logo-darkmode.svg"
CenterMark.dark.type = "custom"
CenterMark.dark.url = "/custom/branded/mark-darkmode.svg"
CenterMark.light.type = "custom"
CenterMark.light.url = "/custom/branded/mark.svg"
CenterMark.type = "custom"
CenterMark.url = "/custom/branded/mark-darkmode.svg"
Mark.dark.type = "custom"
Mark.dark.url = "/custom/branded/mark-darkmode.svg"
Mark.light.type = "custom"
Mark.light.url = "/custom/branded/mark.svg"
Mark.type = "custom"
Mark.url = "/custom/branded/mark-darkmode.svg"
OpenSearch.dark.type = "custom"
OpenSearch.dark.url = "/custom/branded/logo-darkmode.svg"
OpenSearch.light.type = "custom"
OpenSearch.light.url = "/custom/branded/logo.svg"
OpenSearch.type = "custom"
OpenSearch.url = "/custom/branded/logo-darkmode.svg"
colorScheme = "dark"
`;

exports[`getLogos when branding has both light and dark logos and only light spinners returns the correct logos when light color scheme is requested 1`] = `
AnimatedMark.dark.type = "custom"
AnimatedMark.dark.url = "/custom/branded/spinner.svg"
AnimatedMark.light.type = "custom"
AnimatedMark.light.url = "/custom/branded/spinner.svg"
AnimatedMark.type = "custom"
AnimatedMark.url = "/custom/branded/spinner.svg"
Application.dark.type = "custom"
Application.dark.url = "/custom/branded/logo-darkmode.svg"
Application.light.type = "custom"
Application.light.url = "/custom/branded/logo.svg"
Application.type = "custom"
Application.url = "/custom/branded/logo.svg"
CenterMark.dark.type = "custom"
CenterMark.dark.url = "/custom/branded/mark-darkmode.svg"
CenterMark.light.type = "custom"
CenterMark.light.url = "/custom/branded/mark.svg"
CenterMark.type = "custom"
CenterMark.url = "/custom/branded/mark.svg"
Mark.dark.type = "custom"
Mark.dark.url = "/custom/branded/mark-darkmode.svg"
Mark.light.type = "custom"
Mark.light.url = "/custom/branded/mark.svg"
Mark.type = "custom"
Mark.url = "/custom/branded/mark.svg"
OpenSearch.dark.type = "custom"
OpenSearch.dark.url = "/custom/branded/logo-darkmode.svg"
OpenSearch.light.type = "custom"
OpenSearch.light.url = "/custom/branded/logo.svg"
OpenSearch.type = "custom"
OpenSearch.url = "/custom/branded/logo.svg"
colorScheme = "light"
`;

exports[`getLogos when branding has both light and dark logos and spinners returns the correct logos 1`] = `
AnimatedMark.dark.type = "custom"
AnimatedMark.dark.url = "/custom/branded/spinner-darkmode.svg"
AnimatedMark.light.type = "custom"
AnimatedMark.light.url = "/custom/branded/spinner.svg"
AnimatedMark.type = "custom"
AnimatedMark.url = "/custom/branded/spinner.svg"
Application.dark.type = "custom"
Application.dark.url = "/custom/branded/logo-darkmode.svg"
Application.light.type = "custom"
Application.light.url = "/custom/branded/logo.svg"
Application.type = "custom"
Application.url = "/custom/branded/logo.svg"
CenterMark.dark.type = "custom"
CenterMark.dark.url = "/custom/branded/mark-darkmode.svg"
CenterMark.light.type = "custom"
CenterMark.light.url = "/custom/branded/mark.svg"
CenterMark.type = "custom"
CenterMark.url = "/custom/branded/mark.svg"
Mark.dark.type = "custom"
Mark.dark.url = "/custom/branded/mark-darkmode.svg"
Mark.light.type = "custom"
Mark.light.url = "/custom/branded/mark.svg"
Mark.type = "custom"
Mark.url = "/custom/branded/mark.svg"
OpenSearch.dark.type = "custom"
OpenSearch.dark.url = "/custom/branded/logo-darkmode.svg"
OpenSearch.light.type = "custom"
OpenSearch.light.url = "/custom/branded/logo.svg"
OpenSearch.type = "custom"
OpenSearch.url = "/custom/branded/logo.svg"
colorScheme = "light"
`;

exports[`getLogos when branding has both light and dark logos and spinners returns the correct logos when dark color scheme is requested 1`] = `
AnimatedMark.dark.type = "custom"
AnimatedMark.dark.url = "/custom/branded/spinner-darkmode.svg"
AnimatedMark.light.type = "custom"
AnimatedMark.light.url = "/custom/branded/spinner.svg"
AnimatedMark.type = "custom"
AnimatedMark.url = "/custom/branded/spinner-darkmode.svg"
Application.dark.type = "custom"
Application.dark.url = "/custom/branded/logo-darkmode.svg"
Application.light.type = "custom"
Application.light.url = "/custom/branded/logo.svg"
Application.type = "custom"
Application.url = "/custom/branded/logo-darkmode.svg"
CenterMark.dark.type = "custom"
CenterMark.dark.url = "/custom/branded/mark-darkmode.svg"
CenterMark.light.type = "custom"
CenterMark.light.url = "/custom/branded/mark.svg"
CenterMark.type = "custom"
CenterMark.url = "/custom/branded/mark-darkmode.svg"
Mark.dark.type = "custom"
Mark.dark.url = "/custom/branded/mark-darkmode.svg"
Mark.light.type = "custom"
Mark.light.url = "/custom/branded/mark.svg"
Mark.type = "custom"
Mark.url = "/custom/branded/mark-darkmode.svg"
OpenSearch.dark.type = "custom"
OpenSearch.dark.url = "/custom/branded/logo-darkmode.svg"
OpenSearch.light.type = "custom"
OpenSearch.light.url = "/custom/branded/logo.svg"
OpenSearch.type = "custom"
OpenSearch.url = "/custom/branded/logo-darkmode.svg"
colorScheme = "dark"
`;

exports[`getLogos when branding has both light and dark logos and spinners returns the correct logos when light color scheme is requested 1`] = `
AnimatedMark.dark.type = "custom"
AnimatedMark.dark.url = "/custom/branded/spinner-darkmode.svg"
AnimatedMark.light.type = "custom"
AnimatedMark.light.url = "/custom/branded/spinner.svg"
AnimatedMark.type = "custom"
AnimatedMark.url = "/custom/branded/spinner.svg"
Application.dark.type = "custom"
Application.dark.url = "/custom/branded/logo-darkmode.svg"
Application.light.type = "custom"
Application.light.url = "/custom/branded/logo.svg"
Application.type = "custom"
Application.url = "/custom/branded/logo.svg"
CenterMark.dark.type = "custom"
CenterMark.dark.url = "/custom/branded/mark-darkmode.svg"
CenterMark.light.type = "custom"
CenterMark.light.url = "/custom/branded/mark.svg"
CenterMark.type = "custom"
CenterMark.url = "/custom/branded/mark.svg"
Mark.dark.type = "custom"
Mark.dark.url = "/custom/branded/mark-darkmode.svg"
Mark.light.type = "custom"
Mark.light.url = "/custom/branded/mark.svg"
Mark.type = "custom"
Mark.url = "/custom/branded/mark.svg"
OpenSearch.dark.type = "custom"
OpenSearch.dark.url = "/custom/branded/logo-darkmode.svg"
OpenSearch.light.type = "custom"
OpenSearch.light.url = "/custom/branded/logo.svg"
OpenSearch.type = "custom"
OpenSearch.url = "/custom/branded/logo.svg"
colorScheme = "light"
`;

exports[`getLogos when branding has both light and dark logos returns the correct logos 1`] = `
AnimatedMark.dark.type = "alternative"
AnimatedMark.dark.url = "/custom/branded/mark-darkmode.svg"
AnimatedMark.light.type = "alternative"
AnimatedMark.light.url = "/custom/branded/mark.svg"
AnimatedMark.type = "alternative"
AnimatedMark.url = "/custom/branded/mark.svg"
Application.dark.type = "custom"
Application.dark.url = "/custom/branded/logo-darkmode.svg"
Application.light.type = "custom"
Application.light.url = "/custom/branded/logo.svg"
Application.type = "custom"
Application.url = "/custom/branded/logo.svg"
CenterMark.dark.type = "custom"
CenterMark.dark.url = "/custom/branded/mark-darkmode.svg"
CenterMark.light.type = "custom"
CenterMark.light.url = "/custom/branded/mark.svg"
CenterMark.type = "custom"
CenterMark.url = "/custom/branded/mark.svg"
Mark.dark.type = "custom"
Mark.dark.url = "/custom/branded/mark-darkmode.svg"
Mark.light.type = "custom"
Mark.light.url = "/custom/branded/mark.svg"
Mark.type = "custom"
Mark.url = "/custom/branded/mark.svg"
OpenSearch.dark.type = "custom"
OpenSearch.dark.url = "/custom/branded/logo-darkmode.svg"
OpenSearch.light.type = "custom"
OpenSearch.light.url = "/custom/branded/logo.svg"
OpenSearch.type = "custom"
OpenSearch.url = "/custom/branded/logo.svg"
colorScheme = "light"
`;

exports[`getLogos when branding has both light and dark logos returns the correct logos when dark color scheme is requested 1`] = `
AnimatedMark.dark.type = "alternative"
AnimatedMark.dark.url = "/custom/branded/mark-darkmode.svg"
AnimatedMark.light.type = "alternative"
AnimatedMark.light.url = "/custom/branded/mark.svg"
AnimatedMark.type = "alternative"
AnimatedMark.url = "/custom/branded/mark-darkmode.svg"
Application.dark.type = "custom"
Application.dark.url = "/custom/branded/logo-darkmode.svg"
Application.light.type = "custom"
Application.light.url = "/custom/branded/logo.svg"
Application.type = "custom"
Application.url = "/custom/branded/logo-darkmode.svg"
CenterMark.dark.type = "custom"
CenterMark.dark.url = "/custom/branded/mark-darkmode.svg"
CenterMark.light.type = "custom"
CenterMark.light.url = "/custom/branded/mark.svg"
CenterMark.type = "custom"
CenterMark.url = "/custom/branded/mark-darkmode.svg"
Mark.dark.type = "custom"
Mark.dark.url = "/custom/branded/mark-darkmode.svg"
Mark.light.type = "custom"
Mark.light.url = "/custom/branded/mark.svg"
Mark.type = "custom"
Mark.url = "/custom/branded/mark-darkmode.svg"
OpenSearch.dark.type = "custom"
OpenSearch.dark.url = "/custom/branded/logo-darkmode.svg"
OpenSearch.light.type = "custom"
OpenSearch.light.url = "/custom/branded/logo.svg"
OpenSearch.type = "custom"
OpenSearch.url = "/custom/branded/logo-darkmode.svg"
colorScheme = "dark"
`;

exports[`getLogos when branding has both light and dark logos returns the correct logos when light color scheme is requested 1`] = `
AnimatedMark.dark.type = "alternative"
AnimatedMark.dark.url = "/custom/branded/mark-darkmode.svg"
AnimatedMark.light.type = "alternative"
AnimatedMark.light.url = "/custom/branded/mark.svg"
AnimatedMark.type = "alternative"
AnimatedMark.url = "/custom/branded/mark.svg"
Application.dark.type = "custom"
Application.dark.url = "/custom/branded/logo-darkmode.svg"
Application.light.type = "custom"
Application.light.url = "/custom/branded/logo.svg"
Application.type = "custom"
Application.url = "/custom/branded/logo.svg"
CenterMark.dark.type = "custom"
CenterMark.dark.url = "/custom/branded/mark-darkmode.svg"
CenterMark.light.type = "custom"
CenterMark.light.url = "/custom/branded/mark.svg"
CenterMark.type = "custom"
CenterMark.url = "/custom/branded/mark.svg"
Mark.dark.type = "custom"
Mark.dark.url = "/custom/branded/mark-darkmode.svg"
Mark.light.type = "custom"
Mark.light.url = "/custom/branded/mark.svg"
Mark.type = "custom"
Mark.url = "/custom/branded/mark.svg"
OpenSearch.dark.type = "custom"
OpenSearch.dark.url = "/custom/branded/logo-darkmode.svg"
OpenSearch.light.type = "custom"
OpenSearch.light.url = "/custom/branded/logo.svg"
OpenSearch.type = "custom"
OpenSearch.url = "/custom/branded/logo.svg"
colorScheme = "light"
`;

exports[`getLogos when branding has only light logos and spinner returns the correct logos 1`] = `
AnimatedMark.dark.type = "custom"
AnimatedMark.dark.url = "/custom/branded/spinner.svg"
AnimatedMark.light.type = "custom"
AnimatedMark.light.url = "/custom/branded/spinner.svg"
AnimatedMark.type = "custom"
AnimatedMark.url = "/custom/branded/spinner.svg"
Application.dark.type = "custom"
Application.dark.url = "/custom/branded/logo.svg"
Application.light.type = "custom"
Application.light.url = "/custom/branded/logo.svg"
Application.type = "custom"
Application.url = "/custom/branded/logo.svg"
CenterMark.dark.type = "custom"
CenterMark.dark.url = "/custom/branded/mark.svg"
CenterMark.light.type = "custom"
CenterMark.light.url = "/custom/branded/mark.svg"
CenterMark.type = "custom"
CenterMark.url = "/custom/branded/mark.svg"
Mark.dark.type = "custom"
Mark.dark.url = "/custom/branded/mark.svg"
Mark.light.type = "custom"
Mark.light.url = "/custom/branded/mark.svg"
Mark.type = "custom"
Mark.url = "/custom/branded/mark.svg"
OpenSearch.dark.type = "custom"
OpenSearch.dark.url = "/custom/branded/logo.svg"
OpenSearch.light.type = "custom"
OpenSearch.light.url = "/custom/branded/logo.svg"
OpenSearch.type = "custom"
OpenSearch.url = "/custom/branded/logo.svg"
colorScheme = "light"
`;

exports[`getLogos when branding has only light logos and spinner returns the correct logos when dark color scheme is requested 1`] = `
AnimatedMark.dark.type = "custom"
AnimatedMark.dark.url = "/custom/branded/spinner.svg"
AnimatedMark.light.type = "custom"
AnimatedMark.light.url = "/custom/branded/spinner.svg"
AnimatedMark.type = "custom"
AnimatedMark.url = "/custom/branded/spinner.svg"
Application.dark.type = "custom"
Application.dark.url = "/custom/branded/logo.svg"
Application.light.type = "custom"
Application.light.url = "/custom/branded/logo.svg"
Application.type = "custom"
Application.url = "/custom/branded/logo.svg"
CenterMark.dark.type = "custom"
CenterMark.dark.url = "/custom/branded/mark.svg"
CenterMark.light.type = "custom"
CenterMark.light.url = "/custom/branded/mark.svg"
CenterMark.type = "custom"
CenterMark.url = "/custom/branded/mark.svg"
Mark.dark.type = "custom"
Mark.dark.url = "/custom/branded/mark.svg"
Mark.light.type = "custom"
Mark.light.url = "/custom/branded/mark.svg"
Mark.type = "custom"
Mark.url = "/custom/branded/mark.svg"
OpenSearch.dark.type = "custom"
OpenSearch.dark.url = "/custom/branded/logo.svg"
OpenSearch.light.type = "custom"
OpenSearch.light.url = "/custom/branded/logo.svg"
OpenSearch.type = "custom"
OpenSearch.url = "/custom/branded/logo.svg"
colorScheme = "dark"
`;

exports[`getLogos when branding has only light logos and spinner returns the correct logos when light color scheme is requested 1`] = `
AnimatedMark.dark.type = "custom"
AnimatedMark.dark.url = "/custom/branded/spinner.svg"
AnimatedMark.light.type = "custom"
AnimatedMark.light.url = "/custom/branded/spinner.svg"
AnimatedMark.type = "custom"
AnimatedMark.url = "/custom/branded/spinner.svg"
Application.dark.type = "custom"
Application.dark.url = "/custom/branded/logo.svg"
Application.light.type = "custom"
Application.light.url = "/custom/branded/logo.svg"
Application.type = "custom"
Application.url = "/custom/branded/logo.svg"
CenterMark.dark.type = "custom"
CenterMark.dark.url = "/custom/branded/mark.svg"
CenterMark.light.type = "custom"
CenterMark.light.url = "/custom/branded/mark.svg"
CenterMark.type = "custom"
CenterMark.url = "/custom/branded/mark.svg"
Mark.dark.type = "custom"
Mark.dark.url = "/custom/branded/mark.svg"
Mark.light.type = "custom"
Mark.light.url = "/custom/branded/mark.svg"
Mark.type = "custom"
Mark.url = "/custom/branded/mark.svg"
OpenSearch.dark.type = "custom"
OpenSearch.dark.url = "/custom/branded/logo.svg"
OpenSearch.light.type = "custom"
OpenSearch.light.url = "/custom/branded/logo.svg"
OpenSearch.type = "custom"
OpenSearch.url = "/custom/branded/logo.svg"
colorScheme = "light"
`;

exports[`getLogos when branding has only light logos returns the correct logos 1`] = `
AnimatedMark.dark.type = "alternative"
AnimatedMark.dark.url = "/custom/branded/mark.svg"
AnimatedMark.light.type = "alternative"
AnimatedMark.light.url = "/custom/branded/mark.svg"
AnimatedMark.type = "alternative"
AnimatedMark.url = "/custom/branded/mark.svg"
Application.dark.type = "custom"
Application.dark.url = "/custom/branded/logo.svg"
Application.light.type = "custom"
Application.light.url = "/custom/branded/logo.svg"
Application.type = "custom"
Application.url = "/custom/branded/logo.svg"
CenterMark.dark.type = "custom"
CenterMark.dark.url = "/custom/branded/mark.svg"
CenterMark.light.type = "custom"
CenterMark.light.url = "/custom/branded/mark.svg"
CenterMark.type = "custom"
CenterMark.url = "/custom/branded/mark.svg"
Mark.dark.type = "custom"
Mark.dark.url = "/custom/branded/mark.svg"
Mark.light.type = "custom"
Mark.light.url = "/custom/branded/mark.svg"
Mark.type = "custom"
Mark.url = "/custom/branded/mark.svg"
OpenSearch.dark.type = "custom"
OpenSearch.dark.url = "/custom/branded/logo.svg"
OpenSearch.light.type = "custom"
OpenSearch.light.url = "/custom/branded/logo.svg"
OpenSearch.type = "custom"
OpenSearch.url = "/custom/branded/logo.svg"
colorScheme = "light"
`;

exports[`getLogos when branding has only light logos returns the correct logos when dark color scheme is requested 1`] = `
AnimatedMark.dark.type = "alternative"
AnimatedMark.dark.url = "/custom/branded/mark.svg"
AnimatedMark.light.type = "alternative"
AnimatedMark.light.url = "/custom/branded/mark.svg"
AnimatedMark.type = "alternative"
AnimatedMark.url = "/custom/branded/mark.svg"
Application.dark.type = "custom"
Application.dark.url = "/custom/branded/logo.svg"
Application.light.type = "custom"
Application.light.url = "/custom/branded/logo.svg"
Application.type = "custom"
Application.url = "/custom/branded/logo.svg"
CenterMark.dark.type = "custom"
CenterMark.dark.url = "/custom/branded/mark.svg"
CenterMark.light.type = "custom"
CenterMark.light.url = "/custom/branded/mark.svg"
CenterMark.type = "custom"
CenterMark.url = "/custom/branded/mark.svg"
Mark.dark.type = "custom"
Mark.dark.url = "/custom/branded/mark.svg"
Mark.light.type = "custom"
Mark.light.url = "/custom/branded/mark.svg"
Mark.type = "custom"
Mark.url = "/custom/branded/mark.svg"
OpenSearch.dark.type = "custom"
OpenSearch.dark.url = "/custom/branded/logo.svg"
OpenSearch.light.type = "custom"
OpenSearch.light.url = "/custom/branded/logo.svg"
OpenSearch.type = "custom"
OpenSearch.url = "/custom/branded/logo.svg"
colorScheme = "dark"
`;

exports[`getLogos when branding has only light logos returns the correct logos when light color scheme is requested 1`] = `
AnimatedMark.dark.type = "alternative"
AnimatedMark.dark.url = "/custom/branded/mark.svg"
AnimatedMark.light.type = "alternative"
AnimatedMark.light.url = "/custom/branded/mark.svg"
AnimatedMark.type = "alternative"
AnimatedMark.url = "/custom/branded/mark.svg"
Application.dark.type = "custom"
Application.dark.url = "/custom/branded/logo.svg"
Application.light.type = "custom"
Application.light.url = "/custom/branded/logo.svg"
Application.type = "custom"
Application.url = "/custom/branded/logo.svg"
CenterMark.dark.type = "custom"
CenterMark.dark.url = "/custom/branded/mark.svg"
CenterMark.light.type = "custom"
CenterMark.light.url = "/custom/branded/mark.svg"
CenterMark.type = "custom"
CenterMark.url = "/custom/branded/mark.svg"
Mark.dark.type = "custom"
Mark.dark.url = "/custom/branded/mark.svg"
Mark.light.type = "custom"
Mark.light.url = "/custom/branded/mark.svg"
Mark.type = "custom"
Mark.url = "/custom/branded/mark.svg"
OpenSearch.dark.type = "custom"
OpenSearch.dark.url = "/custom/branded/logo.svg"
OpenSearch.light.type = "custom"
OpenSearch.light.url = "/custom/branded/logo.svg"
OpenSearch.type = "custom"
OpenSearch.url = "/custom/branded/logo.svg"
colorScheme = "light"
`;

exports[`getLogos when unbranded returns the correct logos 1`] = `
AnimatedMark.dark.type = "default"
AnimatedMark.dark.url = "/mocked/base/path/ui/logos/opensearch_spinner_on_dark.svg"
AnimatedMark.light.type = "default"
AnimatedMark.light.url = "/mocked/base/path/ui/logos/opensearch_spinner_on_light.svg"
AnimatedMark.type = "default"
AnimatedMark.url = "/mocked/base/path/ui/logos/opensearch_spinner_on_light.svg"
Application.dark.type = "default"
Application.dark.url = "/mocked/base/path/ui/logos/opensearch_dashboards_on_dark.svg"
Application.light.type = "default"
Application.light.url = "/mocked/base/path/ui/logos/opensearch_dashboards_on_light.svg"
Application.type = "default"
Application.url = "/mocked/base/path/ui/logos/opensearch_dashboards_on_light.svg"
CenterMark.dark.type = "default"
CenterMark.dark.url = "/mocked/base/path/ui/logos/opensearch_center_mark_on_dark.svg"
CenterMark.light.type = "default"
CenterMark.light.url = "/mocked/base/path/ui/logos/opensearch_center_mark_on_light.svg"
CenterMark.type = "default"
CenterMark.url = "/mocked/base/path/ui/logos/opensearch_center_mark_on_light.svg"
Mark.dark.type = "default"
Mark.dark.url = "/mocked/base/path/ui/logos/opensearch_mark_on_dark.svg"
Mark.light.type = "default"
Mark.light.url = "/mocked/base/path/ui/logos/opensearch_mark_on_light.svg"
Mark.type = "default"
Mark.url = "/mocked/base/path/ui/logos/opensearch_mark_on_light.svg"
OpenSearch.dark.type = "default"
OpenSearch.dark.url = "/mocked/base/path/ui/logos/opensearch_on_dark.svg"
OpenSearch.light.type = "default"
OpenSearch.light.url = "/mocked/base/path/ui/logos/opensearch_on_light.svg"
OpenSearch.type = "default"
OpenSearch.url = "/mocked/base/path/ui/logos/opensearch_on_light.svg"
colorScheme = "light"
`;

exports[`getLogos when unbranded returns the correct logos when dark color scheme is requested 1`] = `
AnimatedMark.dark.type = "default"
AnimatedMark.dark.url = "/mocked/base/path/ui/logos/opensearch_spinner_on_dark.svg"
AnimatedMark.light.type = "default"
AnimatedMark.light.url = "/mocked/base/path/ui/logos/opensearch_spinner_on_light.svg"
AnimatedMark.type = "default"
AnimatedMark.url = "/mocked/base/path/ui/logos/opensearch_spinner_on_dark.svg"
Application.dark.type = "default"
Application.dark.url = "/mocked/base/path/ui/logos/opensearch_dashboards_on_dark.svg"
Application.light.type = "default"
Application.light.url = "/mocked/base/path/ui/logos/opensearch_dashboards_on_light.svg"
Application.type = "default"
Application.url = "/mocked/base/path/ui/logos/opensearch_dashboards_on_dark.svg"
CenterMark.dark.type = "default"
CenterMark.dark.url = "/mocked/base/path/ui/logos/opensearch_center_mark_on_dark.svg"
CenterMark.light.type = "default"
CenterMark.light.url = "/mocked/base/path/ui/logos/opensearch_center_mark_on_light.svg"
CenterMark.type = "default"
CenterMark.url = "/mocked/base/path/ui/logos/opensearch_center_mark_on_dark.svg"
Mark.dark.type = "default"
Mark.dark.url = "/mocked/base/path/ui/logos/opensearch_mark_on_dark.svg"
Mark.light.type = "default"
Mark.light.url = "/mocked/base/path/ui/logos/opensearch_mark_on_light.svg"
Mark.type = "default"
Mark.url = "/mocked/base/path/ui/logos/opensearch_mark_on_dark.svg"
OpenSearch.dark.type = "default"
OpenSearch.dark.url = "/mocked/base/path/ui/logos/opensearch_on_dark.svg"
OpenSearch.light.type = "default"
OpenSearch.light.url = "/mocked/base/path/ui/logos/opensearch_on_light.svg"
OpenSearch.type = "default"
OpenSearch.url = "/mocked/base/path/ui/logos/opensearch_on_dark.svg"
colorScheme = "dark"
`;

exports[`getLogos when unbranded returns the correct logos when light color scheme is requested 1`] = `
AnimatedMark.dark.type = "default"
AnimatedMark.dark.url = "/mocked/base/path/ui/logos/opensearch_spinner_on_dark.svg"
AnimatedMark.light.type = "default"
AnimatedMark.light.url = "/mocked/base/path/ui/logos/opensearch_spinner_on_light.svg"
AnimatedMark.type = "default"
AnimatedMark.url = "/mocked/base/path/ui/logos/opensearch_spinner_on_light.svg"
Application.dark.type = "default"
Application.dark.url = "/mocked/base/path/ui/logos/opensearch_dashboards_on_dark.svg"
Application.light.type = "default"
Application.light.url = "/mocked/base/path/ui/logos/opensearch_dashboards_on_light.svg"
Application.type = "default"
Application.url = "/mocked/base/path/ui/logos/opensearch_dashboards_on_light.svg"
CenterMark.dark.type = "default"
CenterMark.dark.url = "/mocked/base/path/ui/logos/opensearch_center_mark_on_dark.svg"
CenterMark.light.type = "default"
CenterMark.light.url = "/mocked/base/path/ui/logos/opensearch_center_mark_on_light.svg"
CenterMark.type = "default"
CenterMark.url = "/mocked/base/path/ui/logos/opensearch_center_mark_on_light.svg"
Mark.dark.type = "default"
Mark.dark.url = "/mocked/base/path/ui/logos/opensearch_mark_on_dark.svg"
Mark.light.type = "default"
Mark.light.url = "/mocked/base/path/ui/logos/opensearch_mark_on_light.svg"
Mark.type = "default"
Mark.url = "/mocked/base/path/ui/logos/opensearch_mark_on_light.svg"
OpenSearch.dark.type = "default"
OpenSearch.dark.url = "/mocked/base/path/ui/logos/opensearch_on_dark.svg"
OpenSearch.light.type = "default"
OpenSearch.light.url = "/mocked/base/path/ui/logos/opensearch_on_light.svg"
OpenSearch.type = "default"
OpenSearch.url = "/mocked/base/path/ui/logos/opensearch_on_light.svg"
colorScheme = "light"
`;
