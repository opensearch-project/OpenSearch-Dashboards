// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LanguageSelector should select DQL if language is kuery 1`] = `
<Provider
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {
        "date": Object {
          "full": Object {
            "day": "numeric",
            "month": "long",
            "weekday": "long",
            "year": "numeric",
          },
          "long": Object {
            "day": "numeric",
            "month": "long",
            "year": "numeric",
          },
          "medium": Object {
            "day": "numeric",
            "month": "short",
            "year": "numeric",
          },
          "short": Object {
            "day": "numeric",
            "month": "numeric",
            "year": "2-digit",
          },
        },
        "number": Object {
          "currency": Object {
            "style": "currency",
          },
          "percent": Object {
            "style": "percent",
          },
        },
        "relative": Object {
          "days": Object {
            "units": "day",
          },
          "hours": Object {
            "units": "hour",
          },
          "minutes": Object {
            "units": "minute",
          },
          "months": Object {
            "units": "month",
          },
          "seconds": Object {
            "units": "second",
          },
          "years": Object {
            "units": "year",
          },
        },
        "time": Object {
          "full": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "long": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "medium": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
          },
          "short": Object {
            "hour": "numeric",
            "minute": "numeric",
          },
        },
      },
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": null,
    }
  }
  services={
    Object {
      "data": Object {
        "query": Object {
          "queryString": Object {
            "getDatasetService": [Function],
            "getLanguageService": [Function],
            "getQuery": [MockFunction] {
              "calls": Array [
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
                Array [],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Object {
                    "dataset": undefined,
                    "language": "lucene",
                    "query": "",
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "dataset": undefined,
                    "language": "lucene",
                    "query": "",
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "dataset": undefined,
                    "language": "lucene",
                    "query": "",
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "dataset": undefined,
                    "language": "lucene",
                    "query": "",
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "dataset": undefined,
                    "language": "kuery",
                    "query": "",
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "dataset": undefined,
                    "language": "kuery",
                    "query": "",
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "dataset": undefined,
                    "language": "kuery",
                    "query": "",
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "dataset": undefined,
                    "language": "kuery",
                    "query": "",
                  },
                },
              ],
            },
            "getUpdates$": [MockFunction],
          },
        },
      },
      "docLinks": Object {
        "DOC_LINK_VERSION": "mocked-test-branch",
        "OPENSEARCH_WEBSITE_URL": "https://opensearch.org/",
        "links": Object {
          "noDocumentation": Object {
            "addData": "https://opensearch.org/docs/mocked-test-branch",
            "apmServer": "https://opensearch.org/docs/mocked-test-branch",
            "auditbeat": "https://opensearch.org/docs/mocked-test-branchtools/index/#downloads",
            "clusterAPI": Object {
              "clusterPending": "https://opensearch.org/docs/mocked-test-branch",
              "clusterRoute": "https://opensearch.org/docs/mocked-test-branch/api-reference/cluster-api/cluster-awareness/",
              "clusterState": "https://opensearch.org/docs/mocked-test-branch",
              "clusterStats": "https://opensearch.org/docs/mocked-test-branch/api-reference/cluster-api/cluster-stats/",
            },
            "documentAPI": Object {
              "delete_by_query": "https://opensearch.org/docs/mocked-test-branch/api-reference/document-apis/delete-by-query/",
              "multiTermVector": "https://opensearch.org/docs/mocked-test-branch",
              "termVector": "https://opensearch.org/docs/mocked-test-branch",
              "update_by_query_rethrottle": "https://opensearch.org/docs/mocked-test-branch/api-reference/document-apis/update-by-query/",
            },
            "filebeat": "https://opensearch.org/docs/mocked-test-branchtools/index/#downloads",
            "filed_caps": "https://opensearch.org/docs/mocked-test-branch",
            "functionbeat": "https://opensearch.org/docs/mocked-test-branchtools/index/#downloads",
            "heartbeat": "https://opensearch.org/docs/mocked-test-branchtools/index/#downloads",
            "indexAPI": Object {
              "indexAnalyze": "https://opensearch.org/docs/mocked-test-branch/api-reference/analyze-apis/index/",
              "indexClearCache": "https://opensearch.org/docs/mocked-test-branch/api-reference/index-apis/clear-index-cache/",
              "indexClone": "https://opensearch.org/docs/mocked-test-branch/api-reference/index-apis/clone/",
              "indexFlush": "https://opensearch.org/docs/mocked-test-branch",
              "indexForceMerge": "https://opensearch.org/docs/mocked-test-branch",
              "indexGetFieldMapping": "https://opensearch.org/docs/mocked-test-branch",
              "indexGetMapping": "https://opensearch.org/docs/mocked-test-branch",
              "indexOpenClose": "https://opensearch.org/docs/mocked-test-branch/api-reference/index-apis/open-index/",
              "indexPutMapping": "https://opensearch.org/docs/mocked-test-branch/api-reference/index-apis/put-mapping/",
              "indexRecovery": "https://opensearch.org/docs/mocked-test-branch",
              "indexRefresh": "https://opensearch.org/docs/mocked-test-branch",
              "indexRollover": "https://opensearch.org/docs/mocked-test-branch",
              "indexSearchValidate": "https://opensearch.org/docs/mocked-test-branch",
              "indexSegment": "https://opensearch.org/docs/mocked-test-branch",
              "indexSetting": "https://opensearch.org/docs/mocked-test-branch/api-reference/index-apis/get-settings/",
              "indexShardStore": "https://opensearch.org/docs/mocked-test-branch",
              "indexShrink": "https://opensearch.org/docs/mocked-test-branch/api-reference/index-apis/shrink-index/",
              "indexSplit": "https://opensearch.org/docs/mocked-test-branch/api-reference/index-apis/split/",
              "indexStats": "https://opensearch.org/docs/mocked-test-branch",
              "indexSynced": "https://opensearch.org/docs/mocked-test-branch",
              "indexUpdateSetting": "https://opensearch.org/docs/mocked-test-branch/api-reference/index-apis/update-settings/",
              "indexUpgrade": "https://opensearch.org/docs/mocked-test-branch",
            },
            "indexPatterns": Object {
              "introduction": "https://opensearch.org/docs/mocked-test-branch",
              "loadingData": "https://opensearch.org/docs/mocked-test-branch",
            },
            "ingest": Object {
              "appendProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "bytesProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "convertProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/string-converter/",
              "csvProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/csv/",
              "dataIndexNamProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/date/",
              "dataProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/date/",
              "deletePipeline": "https://opensearch.org/docs/mocked-test-branch/api-reference/ingest-apis/delete-ingest/",
              "dissectProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "dotExpandProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "dropProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/drop-events/",
              "failProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "foreachProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "geoIPProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "getPipeline": "https://opensearch.org/docs/mocked-test-branch/api-reference/ingest-apis/get-ingest/",
              "grokProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/grok/",
              "gusbProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "htmlstripProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "inferenceProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "ingestCircleProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "joinProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "jsonProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/parse-json/",
              "kvProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/key-value/",
              "lowecaseProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/lowercase-string/",
              "pipelineProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "putPipeline": "https://opensearch.org/docs/mocked-test-branch/api-reference/ingest-apis/create-update-ingest/",
              "removeProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "renameProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/rename-keys/",
              "scriptProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "securityUserProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "setProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "simulatePipeline": "https://opensearch.org/docs/mocked-test-branch/api-reference/ingest-apis/simulate-ingest/",
              "sortProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "splitProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/split-string/",
              "trimProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/trim-string/",
              "uppercaseProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/uppercase-string/",
              "urldecodeProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "userAgentProcessor": "https://opensearch.org/docs/mocked-test-branch",
            },
            "logstash": "https://opensearch.org/docs/mocked-test-branch",
            "lucene": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/query-dsl/full-text/query-string/",
            },
            "management": Object {
              "dashboardSettings": "https://opensearch.org/docs/mocked-test-branch",
              "opensearchDashboardsGeneralSettings": "https://opensearch.org/docs/mocked-test-branch",
              "opensearchDashboardsSearchSettings": "https://opensearch.org/docs/mocked-test-branch",
            },
            "mappingTypes": "https://opensearch.org/docs/mocked-test-branch/field-types/mappings/",
            "metricbeat": "https://opensearch.org/docs/mocked-test-branchtools/index/#downloads",
            "moduleScripting": "https://opensearch.org/docs/mocked-test-branch",
            "nodes": Object {
              "hotThreads": "https://opensearch.org/docs/mocked-test-branch/api-reference/nodes-apis/nodes-hot-threads/",
              "info": "https://opensearch.org/docs/mocked-test-branch/api-reference/nodes-apis/nodes-info/",
              "nodeStats": "https://opensearch.org/docs/mocked-test-branch/api-reference/nodes-apis/nodes-stats/",
              "reloadSecuritySetting": "https://opensearch.org/docs/mocked-test-branch/api-reference/nodes-apis/nodes-reload-secure/",
              "usage": "https://opensearch.org/docs/mocked-test-branch/api-reference/nodes-apis/nodes-usage/",
            },
            "painless_execute": "https://opensearch.org/docs/mocked-test-branch/api-reference/script-apis/exec-script/",
            "ppl": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/search-plugins/sql/ppl/syntax/",
            },
            "reIndex": Object {
              "rethrottle": "https://opensearch.org/docs/mocked-test-branch",
            },
            "savedObject": Object {
              "manageSavedObject": "https://opensearch.org/docs/mocked-test-branch/security/multi-tenancy/mt-agg-view/",
            },
            "scriptedFields": Object {
              "luceneExpressions": "https://opensearch.org/docs/mocked-test-branch",
              "painless": "https://opensearch.org/docs/mocked-test-branch",
              "painlessApi": "https://opensearch.org/docs/mocked-test-branch",
              "painlessSyntax": "https://opensearch.org/docs/mocked-test-branch",
              "scriptAggs": "https://opensearch.org/docs/mocked-test-branch",
              "scriptFields": "https://opensearch.org/docs/mocked-test-branch",
            },
            "scroll": Object {
              "clear_scroll": "https://opensearch.org/docs/mocked-test-branch/api-reference/scroll/",
            },
            "search": Object {
              "search": "https://opensearch.org/docs/mocked-test-branch/api-reference/search/",
              "searchFieldCap": "https://opensearch.org/docs/mocked-test-branch",
              "searchRankEval": "https://opensearch.org/docs/mocked-test-branch",
              "searchShards": "https://opensearch.org/docs/mocked-test-branch",
            },
            "siem": "https://opensearch.org/docs/mocked-test-branch",
            "snapshot": Object {
              "cleanup": "https://opensearch.org/docs/mocked-test-branch",
              "deleteRepository": "https://opensearch.org/docs/mocked-test-branch/api-reference/snapshots/delete-snapshot-repository/",
              "deleteSnapshot": "https://opensearch.org/docs/mocked-test-branch/api-reference/snapshots/delete-snapshot/",
              "veirfyRepository": "https://opensearch.org/docs/mocked-test-branch/api-reference/snapshots/verify-snapshot-repository/",
            },
            "sql": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/search-plugins/sql/sql/basic/",
            },
            "sqlPplLimitation": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/search-plugins/sql/limitation/",
            },
            "tutorial": Object {
              "loadDataTutorial": "https://opensearch.org/docs/mocked-test-branch",
              "visualizeTutorial": "https://opensearch.org/docs/mocked-test-branch",
            },
            "vega": "https://opensearch.org/docs/mocked-test-branch/dashboards/",
            "winlogbeat": "https://opensearch.org/docs/mocked-test-branch",
          },
          "opensearch": Object {
            "aggregations": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/aggregations/",
              "bucket": Object {
                "adjacency_matrix": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#adjacency_matrix",
                "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/",
                "filter": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#filter-filters",
                "geo": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#geo_distance-geohash_grid",
                "global": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#global",
                "histogram": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#histogram-date_histogram",
                "missing": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#missing",
                "nested": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#nested-reverse_nested",
                "range": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#range-date_range-ip_range",
                "significant_terms": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#significant_terms-significant_text",
                "smapler": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#sampler-diversified_sampler",
                "terms": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#terms",
              },
              "metric": Object {
                "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/metric-agg/",
                "cardinality": "https://opensearch.org/docs/mocked-test-branch/opensearch/metric-agg/#cardinality",
                "geo_bound": "https://opensearch.org/docs/mocked-test-branch/opensearch/metric-agg/#geo_bound",
                "percentile": "https://opensearch.org/docs/mocked-test-branch/opensearch/metric-agg/#percentile-percentile_ranks",
                "scripted_metric": "https://opensearch.org/docs/mocked-test-branch/opensearch/metric-agg/#scripted_metric",
                "stats": "https://opensearch.org/docs/mocked-test-branch/opensearch/metric-agg/#stats-extended_stats-matrix_stats",
                "sum": "https://opensearch.org/docs/mocked-test-branch/opensearch/metric-agg/#sum-min-max-avg",
                "top_hits": "https://opensearch.org/docs/mocked-test-branch/opensearch/metric-agg/#top_hits",
                "types": "https://opensearch.org/docs/mocked-test-branch/opensearch/metric-agg/#types-of-metric-aggregations",
                "value_count": "https://opensearch.org/docs/mocked-test-branch/opensearch/metric-agg/#value_count",
              },
              "pipeline": Object {
                "avg_bucket": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/#avg_bucket-sum_bucket-min_bucket-max_bucket",
                "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/",
                "bucket_script": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/#bucket_script-bucket_selector",
                "bucket_sort": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/#bucket_sort",
                "cumulative_sum": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/#cumulative_sum",
                "derivative": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/#derivative",
                "moving_avg": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/#moving_avg",
                "serial_diff": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/#serial_diff",
                "stats_bucket": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/#stats_bucket-extended_stats_bucket",
                "syntax": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/#pipeline-aggregation-syntax",
                "types": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/#types-of-pipeline-aggregations",
              },
            },
            "cluster": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/cluster/",
              "build_cluster": "https://opensearch.org/docs/mocked-test-branch/opensearch/cluster/#step-3-bind-a-cluster-to-specific-ip-addresses",
              "config_host": "https://opensearch.org/docs/mocked-test-branch/opensearch/cluster/cluster/#step-4-configure-discovery-hosts-for-a-cluster",
              "config_shard": "https://opensearch.org/docs/mocked-test-branch/opensearch/cluster/#advanced-step-6-configure-shard-allocation-awareness-or-forced-awareness",
              "naming": "https://opensearch.org/docs/mocked-test-branch/opensearch/cluster/#step-1-name-a-cluster",
              "set_attribute": "https://opensearch.org/docs/mocked-test-branch/opensearch/cluster/#step-2-set-node-attributes-for-each-node-in-a-cluster",
              "setup_hot_arch": "https://opensearch.org/docs/mocked-test-branch/opensearch/cluster/#advanced-step-7-set-up-a-hot-warm-architecture",
              "start": "https://opensearch.org/docs/mocked-test-branch/opensearch/cluster/#step-5-start-the-cluster",
            },
            "commonParameters": "https://opensearch.org/docs/mocked-test-branch/opensearch/common-parameters",
            "configuration": "https://opensearch.org/docs/mocked-test-branch/opensearch/configuration/",
            "dataStreams": "https://opensearch.org/docs/mocked-test-branch/opensearch/data-streams/",
            "dateMath": "https://opensearch.org/docs/mocked-test-branch/opensearch/supported-field-types/date/#date-math",
            "indexAlias": Object {
              "add_remove_index": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-alias/#add-or-remove-indices",
              "alias_option": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-alias/#index-alias-options",
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-alias/",
              "create_alias": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-alias/#create-aliases",
              "filtered_alias": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-alias/#create-filtered-aliases",
              "manage_alias": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-alias/#manage-aliases",
            },
            "indexData": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-data/",
              "delete_data": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-data/#delete-data",
              "naming": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-data/#naming-restrictions-for-indices",
              "read_data": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-data/#read-data",
              "update_data": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-data/#update-data",
            },
            "indexTemplates": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-templates",
              "composable": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-templates/#composable-index-templates",
              "options": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-templates/#index-template-options",
            },
            "installation": Object {
              "ansible": "https://opensearch.org/docs/mocked-test-branch/opensearch/install/ansible/",
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/install/index/",
              "compatibility": "https://opensearch.org/docs/mocked-test-branch/opensearch/install/compatibility/",
              "docker": "https://opensearch.org/docs/mocked-test-branch/opensearch/install/docker",
              "dockerSecurity": "https://opensearch.org/docs/mocked-test-branch/opensearch/install/docker-security",
              "helm": "https://opensearch.org/docs/mocked-test-branch/opensearch/install/helm/",
              "plugins": "https://opensearch.org/docs/mocked-test-branch/opensearch/install/plugins/",
              "settings": "https://opensearch.org/docs/mocked-test-branch/opensearch/install/important-settings/",
              "tar": "https://opensearch.org/docs/mocked-test-branch/opensearch/install/tar/",
            },
            "introduction": "https://opensearch.org/docs/mocked-test-branch/opensearch/index/",
            "logs": Object {
              "application_log": "https://opensearch.org/docs/mocked-test-branch/opensearch/logs/#application-logs",
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/logs",
              "deprecation_log": "https://opensearch.org/docs/mocked-test-branch/opensearch/logs/#deprecation-logs",
              "slow_log": "https://opensearch.org/docs/mocked-test-branch/opensearch/logs/#slow-logs",
            },
            "openSearchForum": "https://forum.opensearch.org/t/feedback-experimental-feature-connect-to-external-data-sources/11144",
            "popularAPI": "https://opensearch.org/docs/mocked-test-branch/opensearch/popular-api",
            "queryDSL": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/index/",
              "boolQuery": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/bool/",
              "fullText": Object {
                "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/full-text/",
                "common_terms": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/full-text/#common-terms",
                "match": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/full-text/#match",
                "match_phrase": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/full-text/#match-phrase",
                "multi_match": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/full-text/#multi-match",
                "options": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/full-text/#options",
                "query_string": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/full-text/#query-string",
              },
              "term": Object {
                "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/term/",
                "exists": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/term/#exists",
                "ids": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/term/#ids",
                "prefix": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/term/#prefix",
                "range": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/term/#range",
                "regex": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/term/#regex",
                "terms": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/term/#terms",
                "wildcards": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/term/#wildcards",
              },
            },
            "reindexData": Object {
              "all": "https://opensearch.org/docs/mocked-test-branch/opensearch/reindex-data/#reindex-all-documents",
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/reindex-data/",
              "combine": "https://opensearch.org/docs/mocked-test-branch/opensearch/reindex-data/#combine-one-or-more-indices",
              "destination": "https://opensearch.org/docs/mocked-test-branch/opensearch/reindex-data/#destination-index-options",
              "remote": "https://opensearch.org/docs/mocked-test-branch/opensearch/reindex-data/#reindex-from-a-remote-cluster",
              "source": "https://opensearch.org/docs/mocked-test-branch/opensearch/reindex-data/#source-index-options",
              "subset": "https://opensearch.org/docs/mocked-test-branch/opensearch/reindex-data/#reindex-a-subset-of-documents",
              "transform": "https://opensearch.org/docs/mocked-test-branch/opensearch/reindex-data/#transform-documents-during-reindexing",
              "unique": "https://opensearch.org/docs/mocked-test-branch/opensearch/reindex-data/#reindex-only-unique-documents",
              "update": "https://opensearch.org/docs/mocked-test-branch/opensearch/reindex-data/#update-documents-in-the-current-index",
            },
            "restAPI": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/rest-api/index/",
              "indexAPI": Object {
                "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/rest-api/index-apis/index/",
                "close": "https://opensearch.org/docs/mocked-test-branch/opensearch/rest-api/index-apis/close-index/",
                "create": "https://opensearch.org/docs/mocked-test-branch/opensearch/rest-api/index-apis/create-index/",
                "delete": "https://opensearch.org/docs/mocked-test-branch/opensearch/rest-api/index-apis/delete-index/",
                "exists": "https://opensearch.org/docs/mocked-test-branch/opensearch/rest-api/index-apis/exists/",
                "get": "https://opensearch.org/docs/mocked-test-branch/opensearch/rest-api/index-apis/get-index/",
              },
            },
            "searchExperience": Object {
              "autocomplete": "https://opensearch.org/docs/mocked-test-branch/opensearch/ux/#autocomplete-queries",
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/ux",
              "highlight_match": "https://opensearch.org/docs/mocked-test-branch/opensearch/ux/#highlight-query-matches",
              "paginate": "https://opensearch.org/docs/mocked-test-branch/opensearch/ux/#paginate-results",
              "scroll": "https://opensearch.org/docs/mocked-test-branch/opensearch/ux/#scroll-search",
              "sort": "https://opensearch.org/docs/mocked-test-branch/opensearch/ux/#sort-results",
            },
            "searchTemplate": Object {
              "advanced_operation": "https://opensearch.org/docs/mocked-test-branch/opensearch/search-template/#advanced-parameter-conversion-with-search-templates",
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/search-template",
              "create": "https://opensearch.org/docs/mocked-test-branch/opensearch/search-template/#create-search-templates",
              "execute": "https://opensearch.org/docs/mocked-test-branch/opensearch/search-template/#save-and-execute-search-templates",
              "manage": "https://opensearch.org/docs/mocked-test-branch/opensearch/search-template/#manage-search-templates",
              "multiple_search": "https://opensearch.org/docs/mocked-test-branch/opensearch/search-template/#multiple-search-templates",
            },
            "snapshotRestore": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/snapshot-restore",
              "register": "https://opensearch.org/docs/mocked-test-branch/opensearch/snapshot-restore/#register-repository",
              "restore_snapshot": "https://opensearch.org/docs/mocked-test-branch/opensearch/snapshot-restore/#restore-snapshots",
              "security_plugin": "https://opensearch.org/docs/mocked-test-branch/opensearch/snapshot-restore/#security-plugin-considerations",
              "take_snapshot": "https://opensearch.org/docs/mocked-test-branch/opensearch/snapshot-restore/#take-snapshots",
            },
            "supportedUnits": "https://opensearch.org/docs/mocked-test-branch/opensearch/units",
          },
          "opensearchDashboards": Object {
            "browser": "https://opensearch.org/docs/mocked-test-branch/dashboards/browser-compatibility",
            "dashboards": Object {
              "createDashboards": "https://opensearch.org/docs/mocked-test-branch/dashboards/dashboard/index/",
              "quickStart": "https://opensearch.org/docs/mocked-test-branch/dashboards/quickstart/",
            },
            "dataSource": Object {
              "guide": "https://opensearch.org/docs/mocked-test-branch/dashboards/discover/multi-data-sources/",
              "s3DataSource": "https://opensearch.org/docs/mocked-test-branch/dashboards/management/S3-data-source/",
            },
            "devTools": "https://opensearch.org/docs/mocked-test-branch/dashboards/dev-tools/index-dev/",
            "dql": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/dashboards/dql",
              "boolean_query": "https://opensearch.org/docs/mocked-test-branch/dashboards/dql/#boolean-query",
              "date_query": "https://opensearch.org/docs/mocked-test-branch/dashboards/dql/#date-and-range-queries",
              "nested_query": "https://opensearch.org/docs/mocked-test-branch/dashboards/dql/#nested-field-query",
              "terms_query": "https://opensearch.org/docs/mocked-test-branch/dashboards/dql/#terms-query",
            },
            "ganttCharts": "https://opensearch.org/docs/mocked-test-branch/dashboards/gantt",
            "installation": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/dashboards/install/index/",
              "docker": "https://opensearch.org/docs/mocked-test-branch/dashboards/install/docker/",
              "helm": "https://opensearch.org/docs/mocked-test-branch/dashboards/install/helm/",
              "plugins": "https://opensearch.org/docs/mocked-test-branch/dashboards/install/plugins/",
              "tar": "https://opensearch.org/docs/mocked-test-branch/dashboards/install/tar/",
              "tls": "https://opensearch.org/docs/mocked-test-branch/dashboards/install/tls/",
            },
            "introduction": "https://opensearch.org/docs/mocked-test-branch/dashboards/index/",
            "management": Object {
              "advancedSettings": "https://opensearch.org/docs/mocked-test-branch/dashboards/management/advanced-settings/",
            },
            "mapTiles": "https://opensearch.org/docs/mocked-test-branch/dashboards/maptiles",
            "notebooks": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/dashboards/notebooks",
              "create_report": "https://opensearch.org/docs/mocked-test-branch/dashboards/notebooks/#create-a-report",
              "notebook_tutorial": "https://opensearch.org/docs/mocked-test-branch/dashboards/notebooks/#get-started-with-notebooks",
              "paragraph_tutorial": "https://opensearch.org/docs/mocked-test-branch/dashboards/notebooks/#paragraph-actions",
              "sample_notebook": "https://opensearch.org/docs/mocked-test-branch/dashboards/notebooks/#sample-notebooks",
            },
            "reporting": "https://opensearch.org/docs/mocked-test-branch/dashboards/reporting",
            "visualize": Object {
              "guide": "https://opensearch.org/docs/mocked-test-branch/dashboards/visualize/viz-index/",
            },
          },
        },
      },
      "http": Object {
        "addLoadingCountSource": [MockFunction],
        "anonymousPaths": Object {
          "isAnonymous": [MockFunction],
          "register": [MockFunction],
        },
        "basePath": BasePath {
          "basePath": "",
          "clientBasePath": "",
          "get": [Function],
          "getBasePath": [Function],
          "prepend": [Function],
          "remove": [Function],
          "serverBasePath": "",
        },
        "delete": [MockFunction],
        "fetch": [MockFunction],
        "get": [MockFunction],
        "getLoadingCount$": [MockFunction],
        "head": [MockFunction],
        "intercept": [MockFunction],
        "options": [MockFunction],
        "patch": [MockFunction],
        "post": [MockFunction],
        "put": [MockFunction],
      },
      "uiSettings": Object {
        "get": [MockFunction],
        "get$": [MockFunction],
        "getAll": [MockFunction],
        "getDefault": [MockFunction],
        "getSaved$": [MockFunction],
        "getUpdate$": [MockFunction],
        "getUpdateErrors$": [MockFunction],
        "isCustom": [MockFunction],
        "isDeclared": [MockFunction],
        "isDefault": [MockFunction],
        "isOverridden": [MockFunction],
        "overrideLocalDefault": [MockFunction],
        "remove": [MockFunction],
        "set": [MockFunction],
      },
    }
  }
>
  <QueryLanguageSelector
    onSelectLanguage={[MockFunction]}
  >
    <EuiPopover
      anchorPosition="downLeft"
      button={
        <EuiSmallButtonEmpty
          className="languageSelector__button"
          data-test-subj="queryEditorLanguageSelector"
          iconSide="right"
          iconType="arrowDown"
          onClick={[Function]}
        >
          DQL
        </EuiSmallButtonEmpty>
      }
      className="languageSelector"
      closePopover={[Function]}
      display="inlineBlock"
      hasArrow={true}
      isOpen={false}
      ownFocus={true}
      panelPaddingSize="none"
    >
      <div
        className="euiPopover euiPopover--anchorDownLeft languageSelector"
      >
        <div
          className="euiPopover__anchor"
        >
          <EuiSmallButtonEmpty
            className="languageSelector__button"
            data-test-subj="queryEditorLanguageSelector"
            iconSide="right"
            iconType="arrowDown"
            onClick={[Function]}
          >
            <EuiButtonEmpty
              className="languageSelector__button"
              data-test-subj="queryEditorLanguageSelector"
              iconSide="right"
              iconType="arrowDown"
              onClick={[Function]}
              size="s"
            >
              <button
                className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--small languageSelector__button"
                data-test-subj="queryEditorLanguageSelector"
                disabled={false}
                onClick={[Function]}
                type="button"
              >
                <EuiButtonContent
                  className="euiButtonEmpty__content"
                  iconGap="m"
                  iconSide="right"
                  iconSize="m"
                  iconType="arrowDown"
                  textProps={
                    Object {
                      "className": "euiButtonEmpty__text",
                    }
                  }
                >
                  <span
                    className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                  >
                    <EuiIcon
                      className="euiButtonContent__icon"
                      color="inherit"
                      size="m"
                      type="arrowDown"
                    >
                      <span
                        className="euiButtonContent__icon"
                        color="inherit"
                        data-euiicon-type="arrowDown"
                        size="m"
                      />
                    </EuiIcon>
                    <span
                      className="euiButtonEmpty__text"
                    >
                      DQL
                    </span>
                  </span>
                </EuiButtonContent>
              </button>
            </EuiButtonEmpty>
          </EuiSmallButtonEmpty>
        </div>
      </div>
    </EuiPopover>
  </QueryLanguageSelector>
</Provider>
`;

exports[`LanguageSelector should select lucene if language is lucene 1`] = `
<Provider
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {
        "date": Object {
          "full": Object {
            "day": "numeric",
            "month": "long",
            "weekday": "long",
            "year": "numeric",
          },
          "long": Object {
            "day": "numeric",
            "month": "long",
            "year": "numeric",
          },
          "medium": Object {
            "day": "numeric",
            "month": "short",
            "year": "numeric",
          },
          "short": Object {
            "day": "numeric",
            "month": "numeric",
            "year": "2-digit",
          },
        },
        "number": Object {
          "currency": Object {
            "style": "currency",
          },
          "percent": Object {
            "style": "percent",
          },
        },
        "relative": Object {
          "days": Object {
            "units": "day",
          },
          "hours": Object {
            "units": "hour",
          },
          "minutes": Object {
            "units": "minute",
          },
          "months": Object {
            "units": "month",
          },
          "seconds": Object {
            "units": "second",
          },
          "years": Object {
            "units": "year",
          },
        },
        "time": Object {
          "full": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "long": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "medium": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
          },
          "short": Object {
            "hour": "numeric",
            "minute": "numeric",
          },
        },
      },
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": null,
    }
  }
  services={
    Object {
      "data": Object {
        "query": Object {
          "queryString": Object {
            "getDatasetService": [Function],
            "getLanguageService": [Function],
            "getQuery": [MockFunction] {
              "calls": Array [
                Array [],
                Array [],
                Array [],
                Array [],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Object {
                    "dataset": undefined,
                    "language": "lucene",
                    "query": "",
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "dataset": undefined,
                    "language": "lucene",
                    "query": "",
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "dataset": undefined,
                    "language": "lucene",
                    "query": "",
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "dataset": undefined,
                    "language": "lucene",
                    "query": "",
                  },
                },
              ],
            },
            "getUpdates$": [MockFunction],
          },
        },
      },
      "docLinks": Object {
        "DOC_LINK_VERSION": "mocked-test-branch",
        "OPENSEARCH_WEBSITE_URL": "https://opensearch.org/",
        "links": Object {
          "noDocumentation": Object {
            "addData": "https://opensearch.org/docs/mocked-test-branch",
            "apmServer": "https://opensearch.org/docs/mocked-test-branch",
            "auditbeat": "https://opensearch.org/docs/mocked-test-branchtools/index/#downloads",
            "clusterAPI": Object {
              "clusterPending": "https://opensearch.org/docs/mocked-test-branch",
              "clusterRoute": "https://opensearch.org/docs/mocked-test-branch/api-reference/cluster-api/cluster-awareness/",
              "clusterState": "https://opensearch.org/docs/mocked-test-branch",
              "clusterStats": "https://opensearch.org/docs/mocked-test-branch/api-reference/cluster-api/cluster-stats/",
            },
            "documentAPI": Object {
              "delete_by_query": "https://opensearch.org/docs/mocked-test-branch/api-reference/document-apis/delete-by-query/",
              "multiTermVector": "https://opensearch.org/docs/mocked-test-branch",
              "termVector": "https://opensearch.org/docs/mocked-test-branch",
              "update_by_query_rethrottle": "https://opensearch.org/docs/mocked-test-branch/api-reference/document-apis/update-by-query/",
            },
            "filebeat": "https://opensearch.org/docs/mocked-test-branchtools/index/#downloads",
            "filed_caps": "https://opensearch.org/docs/mocked-test-branch",
            "functionbeat": "https://opensearch.org/docs/mocked-test-branchtools/index/#downloads",
            "heartbeat": "https://opensearch.org/docs/mocked-test-branchtools/index/#downloads",
            "indexAPI": Object {
              "indexAnalyze": "https://opensearch.org/docs/mocked-test-branch/api-reference/analyze-apis/index/",
              "indexClearCache": "https://opensearch.org/docs/mocked-test-branch/api-reference/index-apis/clear-index-cache/",
              "indexClone": "https://opensearch.org/docs/mocked-test-branch/api-reference/index-apis/clone/",
              "indexFlush": "https://opensearch.org/docs/mocked-test-branch",
              "indexForceMerge": "https://opensearch.org/docs/mocked-test-branch",
              "indexGetFieldMapping": "https://opensearch.org/docs/mocked-test-branch",
              "indexGetMapping": "https://opensearch.org/docs/mocked-test-branch",
              "indexOpenClose": "https://opensearch.org/docs/mocked-test-branch/api-reference/index-apis/open-index/",
              "indexPutMapping": "https://opensearch.org/docs/mocked-test-branch/api-reference/index-apis/put-mapping/",
              "indexRecovery": "https://opensearch.org/docs/mocked-test-branch",
              "indexRefresh": "https://opensearch.org/docs/mocked-test-branch",
              "indexRollover": "https://opensearch.org/docs/mocked-test-branch",
              "indexSearchValidate": "https://opensearch.org/docs/mocked-test-branch",
              "indexSegment": "https://opensearch.org/docs/mocked-test-branch",
              "indexSetting": "https://opensearch.org/docs/mocked-test-branch/api-reference/index-apis/get-settings/",
              "indexShardStore": "https://opensearch.org/docs/mocked-test-branch",
              "indexShrink": "https://opensearch.org/docs/mocked-test-branch/api-reference/index-apis/shrink-index/",
              "indexSplit": "https://opensearch.org/docs/mocked-test-branch/api-reference/index-apis/split/",
              "indexStats": "https://opensearch.org/docs/mocked-test-branch",
              "indexSynced": "https://opensearch.org/docs/mocked-test-branch",
              "indexUpdateSetting": "https://opensearch.org/docs/mocked-test-branch/api-reference/index-apis/update-settings/",
              "indexUpgrade": "https://opensearch.org/docs/mocked-test-branch",
            },
            "indexPatterns": Object {
              "introduction": "https://opensearch.org/docs/mocked-test-branch",
              "loadingData": "https://opensearch.org/docs/mocked-test-branch",
            },
            "ingest": Object {
              "appendProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "bytesProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "convertProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/string-converter/",
              "csvProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/csv/",
              "dataIndexNamProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/date/",
              "dataProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/date/",
              "deletePipeline": "https://opensearch.org/docs/mocked-test-branch/api-reference/ingest-apis/delete-ingest/",
              "dissectProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "dotExpandProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "dropProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/drop-events/",
              "failProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "foreachProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "geoIPProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "getPipeline": "https://opensearch.org/docs/mocked-test-branch/api-reference/ingest-apis/get-ingest/",
              "grokProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/grok/",
              "gusbProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "htmlstripProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "inferenceProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "ingestCircleProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "joinProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "jsonProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/parse-json/",
              "kvProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/key-value/",
              "lowecaseProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/lowercase-string/",
              "pipelineProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "putPipeline": "https://opensearch.org/docs/mocked-test-branch/api-reference/ingest-apis/create-update-ingest/",
              "removeProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "renameProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/rename-keys/",
              "scriptProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "securityUserProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "setProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "simulatePipeline": "https://opensearch.org/docs/mocked-test-branch/api-reference/ingest-apis/simulate-ingest/",
              "sortProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "splitProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/split-string/",
              "trimProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/trim-string/",
              "uppercaseProcessor": "https://opensearch.org/docs/mocked-test-branch/data-prepper/pipelines/configuration/processors/uppercase-string/",
              "urldecodeProcessor": "https://opensearch.org/docs/mocked-test-branch",
              "userAgentProcessor": "https://opensearch.org/docs/mocked-test-branch",
            },
            "logstash": "https://opensearch.org/docs/mocked-test-branch",
            "lucene": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/query-dsl/full-text/query-string/",
            },
            "management": Object {
              "dashboardSettings": "https://opensearch.org/docs/mocked-test-branch",
              "opensearchDashboardsGeneralSettings": "https://opensearch.org/docs/mocked-test-branch",
              "opensearchDashboardsSearchSettings": "https://opensearch.org/docs/mocked-test-branch",
            },
            "mappingTypes": "https://opensearch.org/docs/mocked-test-branch/field-types/mappings/",
            "metricbeat": "https://opensearch.org/docs/mocked-test-branchtools/index/#downloads",
            "moduleScripting": "https://opensearch.org/docs/mocked-test-branch",
            "nodes": Object {
              "hotThreads": "https://opensearch.org/docs/mocked-test-branch/api-reference/nodes-apis/nodes-hot-threads/",
              "info": "https://opensearch.org/docs/mocked-test-branch/api-reference/nodes-apis/nodes-info/",
              "nodeStats": "https://opensearch.org/docs/mocked-test-branch/api-reference/nodes-apis/nodes-stats/",
              "reloadSecuritySetting": "https://opensearch.org/docs/mocked-test-branch/api-reference/nodes-apis/nodes-reload-secure/",
              "usage": "https://opensearch.org/docs/mocked-test-branch/api-reference/nodes-apis/nodes-usage/",
            },
            "painless_execute": "https://opensearch.org/docs/mocked-test-branch/api-reference/script-apis/exec-script/",
            "ppl": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/search-plugins/sql/ppl/syntax/",
            },
            "reIndex": Object {
              "rethrottle": "https://opensearch.org/docs/mocked-test-branch",
            },
            "savedObject": Object {
              "manageSavedObject": "https://opensearch.org/docs/mocked-test-branch/security/multi-tenancy/mt-agg-view/",
            },
            "scriptedFields": Object {
              "luceneExpressions": "https://opensearch.org/docs/mocked-test-branch",
              "painless": "https://opensearch.org/docs/mocked-test-branch",
              "painlessApi": "https://opensearch.org/docs/mocked-test-branch",
              "painlessSyntax": "https://opensearch.org/docs/mocked-test-branch",
              "scriptAggs": "https://opensearch.org/docs/mocked-test-branch",
              "scriptFields": "https://opensearch.org/docs/mocked-test-branch",
            },
            "scroll": Object {
              "clear_scroll": "https://opensearch.org/docs/mocked-test-branch/api-reference/scroll/",
            },
            "search": Object {
              "search": "https://opensearch.org/docs/mocked-test-branch/api-reference/search/",
              "searchFieldCap": "https://opensearch.org/docs/mocked-test-branch",
              "searchRankEval": "https://opensearch.org/docs/mocked-test-branch",
              "searchShards": "https://opensearch.org/docs/mocked-test-branch",
            },
            "siem": "https://opensearch.org/docs/mocked-test-branch",
            "snapshot": Object {
              "cleanup": "https://opensearch.org/docs/mocked-test-branch",
              "deleteRepository": "https://opensearch.org/docs/mocked-test-branch/api-reference/snapshots/delete-snapshot-repository/",
              "deleteSnapshot": "https://opensearch.org/docs/mocked-test-branch/api-reference/snapshots/delete-snapshot/",
              "veirfyRepository": "https://opensearch.org/docs/mocked-test-branch/api-reference/snapshots/verify-snapshot-repository/",
            },
            "sql": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/search-plugins/sql/sql/basic/",
            },
            "sqlPplLimitation": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/search-plugins/sql/limitation/",
            },
            "tutorial": Object {
              "loadDataTutorial": "https://opensearch.org/docs/mocked-test-branch",
              "visualizeTutorial": "https://opensearch.org/docs/mocked-test-branch",
            },
            "vega": "https://opensearch.org/docs/mocked-test-branch/dashboards/",
            "winlogbeat": "https://opensearch.org/docs/mocked-test-branch",
          },
          "opensearch": Object {
            "aggregations": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/aggregations/",
              "bucket": Object {
                "adjacency_matrix": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#adjacency_matrix",
                "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/",
                "filter": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#filter-filters",
                "geo": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#geo_distance-geohash_grid",
                "global": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#global",
                "histogram": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#histogram-date_histogram",
                "missing": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#missing",
                "nested": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#nested-reverse_nested",
                "range": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#range-date_range-ip_range",
                "significant_terms": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#significant_terms-significant_text",
                "smapler": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#sampler-diversified_sampler",
                "terms": "https://opensearch.org/docs/mocked-test-branch/opensearch/bucket-agg/#terms",
              },
              "metric": Object {
                "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/metric-agg/",
                "cardinality": "https://opensearch.org/docs/mocked-test-branch/opensearch/metric-agg/#cardinality",
                "geo_bound": "https://opensearch.org/docs/mocked-test-branch/opensearch/metric-agg/#geo_bound",
                "percentile": "https://opensearch.org/docs/mocked-test-branch/opensearch/metric-agg/#percentile-percentile_ranks",
                "scripted_metric": "https://opensearch.org/docs/mocked-test-branch/opensearch/metric-agg/#scripted_metric",
                "stats": "https://opensearch.org/docs/mocked-test-branch/opensearch/metric-agg/#stats-extended_stats-matrix_stats",
                "sum": "https://opensearch.org/docs/mocked-test-branch/opensearch/metric-agg/#sum-min-max-avg",
                "top_hits": "https://opensearch.org/docs/mocked-test-branch/opensearch/metric-agg/#top_hits",
                "types": "https://opensearch.org/docs/mocked-test-branch/opensearch/metric-agg/#types-of-metric-aggregations",
                "value_count": "https://opensearch.org/docs/mocked-test-branch/opensearch/metric-agg/#value_count",
              },
              "pipeline": Object {
                "avg_bucket": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/#avg_bucket-sum_bucket-min_bucket-max_bucket",
                "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/",
                "bucket_script": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/#bucket_script-bucket_selector",
                "bucket_sort": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/#bucket_sort",
                "cumulative_sum": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/#cumulative_sum",
                "derivative": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/#derivative",
                "moving_avg": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/#moving_avg",
                "serial_diff": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/#serial_diff",
                "stats_bucket": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/#stats_bucket-extended_stats_bucket",
                "syntax": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/#pipeline-aggregation-syntax",
                "types": "https://opensearch.org/docs/mocked-test-branch/opensearch/pipeline-agg/#types-of-pipeline-aggregations",
              },
            },
            "cluster": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/cluster/",
              "build_cluster": "https://opensearch.org/docs/mocked-test-branch/opensearch/cluster/#step-3-bind-a-cluster-to-specific-ip-addresses",
              "config_host": "https://opensearch.org/docs/mocked-test-branch/opensearch/cluster/cluster/#step-4-configure-discovery-hosts-for-a-cluster",
              "config_shard": "https://opensearch.org/docs/mocked-test-branch/opensearch/cluster/#advanced-step-6-configure-shard-allocation-awareness-or-forced-awareness",
              "naming": "https://opensearch.org/docs/mocked-test-branch/opensearch/cluster/#step-1-name-a-cluster",
              "set_attribute": "https://opensearch.org/docs/mocked-test-branch/opensearch/cluster/#step-2-set-node-attributes-for-each-node-in-a-cluster",
              "setup_hot_arch": "https://opensearch.org/docs/mocked-test-branch/opensearch/cluster/#advanced-step-7-set-up-a-hot-warm-architecture",
              "start": "https://opensearch.org/docs/mocked-test-branch/opensearch/cluster/#step-5-start-the-cluster",
            },
            "commonParameters": "https://opensearch.org/docs/mocked-test-branch/opensearch/common-parameters",
            "configuration": "https://opensearch.org/docs/mocked-test-branch/opensearch/configuration/",
            "dataStreams": "https://opensearch.org/docs/mocked-test-branch/opensearch/data-streams/",
            "dateMath": "https://opensearch.org/docs/mocked-test-branch/opensearch/supported-field-types/date/#date-math",
            "indexAlias": Object {
              "add_remove_index": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-alias/#add-or-remove-indices",
              "alias_option": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-alias/#index-alias-options",
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-alias/",
              "create_alias": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-alias/#create-aliases",
              "filtered_alias": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-alias/#create-filtered-aliases",
              "manage_alias": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-alias/#manage-aliases",
            },
            "indexData": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-data/",
              "delete_data": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-data/#delete-data",
              "naming": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-data/#naming-restrictions-for-indices",
              "read_data": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-data/#read-data",
              "update_data": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-data/#update-data",
            },
            "indexTemplates": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-templates",
              "composable": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-templates/#composable-index-templates",
              "options": "https://opensearch.org/docs/mocked-test-branch/opensearch/index-templates/#index-template-options",
            },
            "installation": Object {
              "ansible": "https://opensearch.org/docs/mocked-test-branch/opensearch/install/ansible/",
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/install/index/",
              "compatibility": "https://opensearch.org/docs/mocked-test-branch/opensearch/install/compatibility/",
              "docker": "https://opensearch.org/docs/mocked-test-branch/opensearch/install/docker",
              "dockerSecurity": "https://opensearch.org/docs/mocked-test-branch/opensearch/install/docker-security",
              "helm": "https://opensearch.org/docs/mocked-test-branch/opensearch/install/helm/",
              "plugins": "https://opensearch.org/docs/mocked-test-branch/opensearch/install/plugins/",
              "settings": "https://opensearch.org/docs/mocked-test-branch/opensearch/install/important-settings/",
              "tar": "https://opensearch.org/docs/mocked-test-branch/opensearch/install/tar/",
            },
            "introduction": "https://opensearch.org/docs/mocked-test-branch/opensearch/index/",
            "logs": Object {
              "application_log": "https://opensearch.org/docs/mocked-test-branch/opensearch/logs/#application-logs",
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/logs",
              "deprecation_log": "https://opensearch.org/docs/mocked-test-branch/opensearch/logs/#deprecation-logs",
              "slow_log": "https://opensearch.org/docs/mocked-test-branch/opensearch/logs/#slow-logs",
            },
            "openSearchForum": "https://forum.opensearch.org/t/feedback-experimental-feature-connect-to-external-data-sources/11144",
            "popularAPI": "https://opensearch.org/docs/mocked-test-branch/opensearch/popular-api",
            "queryDSL": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/index/",
              "boolQuery": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/bool/",
              "fullText": Object {
                "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/full-text/",
                "common_terms": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/full-text/#common-terms",
                "match": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/full-text/#match",
                "match_phrase": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/full-text/#match-phrase",
                "multi_match": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/full-text/#multi-match",
                "options": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/full-text/#options",
                "query_string": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/full-text/#query-string",
              },
              "term": Object {
                "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/term/",
                "exists": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/term/#exists",
                "ids": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/term/#ids",
                "prefix": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/term/#prefix",
                "range": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/term/#range",
                "regex": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/term/#regex",
                "terms": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/term/#terms",
                "wildcards": "https://opensearch.org/docs/mocked-test-branch/opensearch/query-dsl/term/#wildcards",
              },
            },
            "reindexData": Object {
              "all": "https://opensearch.org/docs/mocked-test-branch/opensearch/reindex-data/#reindex-all-documents",
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/reindex-data/",
              "combine": "https://opensearch.org/docs/mocked-test-branch/opensearch/reindex-data/#combine-one-or-more-indices",
              "destination": "https://opensearch.org/docs/mocked-test-branch/opensearch/reindex-data/#destination-index-options",
              "remote": "https://opensearch.org/docs/mocked-test-branch/opensearch/reindex-data/#reindex-from-a-remote-cluster",
              "source": "https://opensearch.org/docs/mocked-test-branch/opensearch/reindex-data/#source-index-options",
              "subset": "https://opensearch.org/docs/mocked-test-branch/opensearch/reindex-data/#reindex-a-subset-of-documents",
              "transform": "https://opensearch.org/docs/mocked-test-branch/opensearch/reindex-data/#transform-documents-during-reindexing",
              "unique": "https://opensearch.org/docs/mocked-test-branch/opensearch/reindex-data/#reindex-only-unique-documents",
              "update": "https://opensearch.org/docs/mocked-test-branch/opensearch/reindex-data/#update-documents-in-the-current-index",
            },
            "restAPI": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/rest-api/index/",
              "indexAPI": Object {
                "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/rest-api/index-apis/index/",
                "close": "https://opensearch.org/docs/mocked-test-branch/opensearch/rest-api/index-apis/close-index/",
                "create": "https://opensearch.org/docs/mocked-test-branch/opensearch/rest-api/index-apis/create-index/",
                "delete": "https://opensearch.org/docs/mocked-test-branch/opensearch/rest-api/index-apis/delete-index/",
                "exists": "https://opensearch.org/docs/mocked-test-branch/opensearch/rest-api/index-apis/exists/",
                "get": "https://opensearch.org/docs/mocked-test-branch/opensearch/rest-api/index-apis/get-index/",
              },
            },
            "searchExperience": Object {
              "autocomplete": "https://opensearch.org/docs/mocked-test-branch/opensearch/ux/#autocomplete-queries",
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/ux",
              "highlight_match": "https://opensearch.org/docs/mocked-test-branch/opensearch/ux/#highlight-query-matches",
              "paginate": "https://opensearch.org/docs/mocked-test-branch/opensearch/ux/#paginate-results",
              "scroll": "https://opensearch.org/docs/mocked-test-branch/opensearch/ux/#scroll-search",
              "sort": "https://opensearch.org/docs/mocked-test-branch/opensearch/ux/#sort-results",
            },
            "searchTemplate": Object {
              "advanced_operation": "https://opensearch.org/docs/mocked-test-branch/opensearch/search-template/#advanced-parameter-conversion-with-search-templates",
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/search-template",
              "create": "https://opensearch.org/docs/mocked-test-branch/opensearch/search-template/#create-search-templates",
              "execute": "https://opensearch.org/docs/mocked-test-branch/opensearch/search-template/#save-and-execute-search-templates",
              "manage": "https://opensearch.org/docs/mocked-test-branch/opensearch/search-template/#manage-search-templates",
              "multiple_search": "https://opensearch.org/docs/mocked-test-branch/opensearch/search-template/#multiple-search-templates",
            },
            "snapshotRestore": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/opensearch/snapshot-restore",
              "register": "https://opensearch.org/docs/mocked-test-branch/opensearch/snapshot-restore/#register-repository",
              "restore_snapshot": "https://opensearch.org/docs/mocked-test-branch/opensearch/snapshot-restore/#restore-snapshots",
              "security_plugin": "https://opensearch.org/docs/mocked-test-branch/opensearch/snapshot-restore/#security-plugin-considerations",
              "take_snapshot": "https://opensearch.org/docs/mocked-test-branch/opensearch/snapshot-restore/#take-snapshots",
            },
            "supportedUnits": "https://opensearch.org/docs/mocked-test-branch/opensearch/units",
          },
          "opensearchDashboards": Object {
            "browser": "https://opensearch.org/docs/mocked-test-branch/dashboards/browser-compatibility",
            "dashboards": Object {
              "createDashboards": "https://opensearch.org/docs/mocked-test-branch/dashboards/dashboard/index/",
              "quickStart": "https://opensearch.org/docs/mocked-test-branch/dashboards/quickstart/",
            },
            "dataSource": Object {
              "guide": "https://opensearch.org/docs/mocked-test-branch/dashboards/discover/multi-data-sources/",
              "s3DataSource": "https://opensearch.org/docs/mocked-test-branch/dashboards/management/S3-data-source/",
            },
            "devTools": "https://opensearch.org/docs/mocked-test-branch/dashboards/dev-tools/index-dev/",
            "dql": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/dashboards/dql",
              "boolean_query": "https://opensearch.org/docs/mocked-test-branch/dashboards/dql/#boolean-query",
              "date_query": "https://opensearch.org/docs/mocked-test-branch/dashboards/dql/#date-and-range-queries",
              "nested_query": "https://opensearch.org/docs/mocked-test-branch/dashboards/dql/#nested-field-query",
              "terms_query": "https://opensearch.org/docs/mocked-test-branch/dashboards/dql/#terms-query",
            },
            "ganttCharts": "https://opensearch.org/docs/mocked-test-branch/dashboards/gantt",
            "installation": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/dashboards/install/index/",
              "docker": "https://opensearch.org/docs/mocked-test-branch/dashboards/install/docker/",
              "helm": "https://opensearch.org/docs/mocked-test-branch/dashboards/install/helm/",
              "plugins": "https://opensearch.org/docs/mocked-test-branch/dashboards/install/plugins/",
              "tar": "https://opensearch.org/docs/mocked-test-branch/dashboards/install/tar/",
              "tls": "https://opensearch.org/docs/mocked-test-branch/dashboards/install/tls/",
            },
            "introduction": "https://opensearch.org/docs/mocked-test-branch/dashboards/index/",
            "management": Object {
              "advancedSettings": "https://opensearch.org/docs/mocked-test-branch/dashboards/management/advanced-settings/",
            },
            "mapTiles": "https://opensearch.org/docs/mocked-test-branch/dashboards/maptiles",
            "notebooks": Object {
              "base": "https://opensearch.org/docs/mocked-test-branch/dashboards/notebooks",
              "create_report": "https://opensearch.org/docs/mocked-test-branch/dashboards/notebooks/#create-a-report",
              "notebook_tutorial": "https://opensearch.org/docs/mocked-test-branch/dashboards/notebooks/#get-started-with-notebooks",
              "paragraph_tutorial": "https://opensearch.org/docs/mocked-test-branch/dashboards/notebooks/#paragraph-actions",
              "sample_notebook": "https://opensearch.org/docs/mocked-test-branch/dashboards/notebooks/#sample-notebooks",
            },
            "reporting": "https://opensearch.org/docs/mocked-test-branch/dashboards/reporting",
            "visualize": Object {
              "guide": "https://opensearch.org/docs/mocked-test-branch/dashboards/visualize/viz-index/",
            },
          },
        },
      },
      "http": Object {
        "addLoadingCountSource": [MockFunction],
        "anonymousPaths": Object {
          "isAnonymous": [MockFunction],
          "register": [MockFunction],
        },
        "basePath": BasePath {
          "basePath": "",
          "clientBasePath": "",
          "get": [Function],
          "getBasePath": [Function],
          "prepend": [Function],
          "remove": [Function],
          "serverBasePath": "",
        },
        "delete": [MockFunction],
        "fetch": [MockFunction],
        "get": [MockFunction],
        "getLoadingCount$": [MockFunction],
        "head": [MockFunction],
        "intercept": [MockFunction],
        "options": [MockFunction],
        "patch": [MockFunction],
        "post": [MockFunction],
        "put": [MockFunction],
      },
      "uiSettings": Object {
        "get": [MockFunction],
        "get$": [MockFunction],
        "getAll": [MockFunction],
        "getDefault": [MockFunction],
        "getSaved$": [MockFunction],
        "getUpdate$": [MockFunction],
        "getUpdateErrors$": [MockFunction],
        "isCustom": [MockFunction],
        "isDeclared": [MockFunction],
        "isDefault": [MockFunction],
        "isOverridden": [MockFunction],
        "overrideLocalDefault": [MockFunction],
        "remove": [MockFunction],
        "set": [MockFunction],
      },
    }
  }
>
  <QueryLanguageSelector
    onSelectLanguage={[MockFunction]}
  >
    <EuiPopover
      anchorPosition="downLeft"
      button={
        <EuiSmallButtonEmpty
          className="languageSelector__button"
          data-test-subj="queryEditorLanguageSelector"
          iconSide="right"
          iconType="arrowDown"
          onClick={[Function]}
        >
          Lucene
        </EuiSmallButtonEmpty>
      }
      className="languageSelector"
      closePopover={[Function]}
      display="inlineBlock"
      hasArrow={true}
      isOpen={false}
      ownFocus={true}
      panelPaddingSize="none"
    >
      <div
        className="euiPopover euiPopover--anchorDownLeft languageSelector"
      >
        <div
          className="euiPopover__anchor"
        >
          <EuiSmallButtonEmpty
            className="languageSelector__button"
            data-test-subj="queryEditorLanguageSelector"
            iconSide="right"
            iconType="arrowDown"
            onClick={[Function]}
          >
            <EuiButtonEmpty
              className="languageSelector__button"
              data-test-subj="queryEditorLanguageSelector"
              iconSide="right"
              iconType="arrowDown"
              onClick={[Function]}
              size="s"
            >
              <button
                className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--small languageSelector__button"
                data-test-subj="queryEditorLanguageSelector"
                disabled={false}
                onClick={[Function]}
                type="button"
              >
                <EuiButtonContent
                  className="euiButtonEmpty__content"
                  iconGap="m"
                  iconSide="right"
                  iconSize="m"
                  iconType="arrowDown"
                  textProps={
                    Object {
                      "className": "euiButtonEmpty__text",
                    }
                  }
                >
                  <span
                    className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                  >
                    <EuiIcon
                      className="euiButtonContent__icon"
                      color="inherit"
                      size="m"
                      type="arrowDown"
                    >
                      <span
                        className="euiButtonContent__icon"
                        color="inherit"
                        data-euiicon-type="arrowDown"
                        size="m"
                      />
                    </EuiIcon>
                    <span
                      className="euiButtonEmpty__text"
                    >
                      Lucene
                    </span>
                  </span>
                </EuiButtonContent>
              </button>
            </EuiButtonEmpty>
          </EuiSmallButtonEmpty>
        </div>
      </div>
    </EuiPopover>
  </QueryLanguageSelector>
</Provider>
`;
