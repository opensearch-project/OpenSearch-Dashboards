// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataSourceAggregatedView should render normally with data source filter 1`] = `
<DataSourceAggregatedView
  dataSourceFilter={[Function]}
  displayAllCompatibleDataSources={true}
  fullWidth={false}
  hideLocalCluster={false}
  notifications={
    Object {
      "add": [MockFunction],
      "addDanger": [MockFunction],
      "addError": [MockFunction],
      "addInfo": [MockFunction],
      "addSuccess": [MockFunction],
      "addWarning": [MockFunction],
      "get$": [MockFunction],
      "remove": [MockFunction],
    }
  }
  savedObjectsClient={
    Object {
      "find": [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "fields": Array [
                "id",
                "title",
                "auth.type",
              ],
              "perPage": 10000,
              "type": "data-source",
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": Promise {},
          },
        ],
      },
    }
  }
>
  <EuiPopover
    anchorPosition="downLeft"
    button={
      <EuiButtonEmpty
        aria-label="show data sources"
        data-test-subj="dataSourceAggregatedViewInfoButton"
        iconSide="left"
        iconType="database"
        onClick={[Function]}
        size="s"
      >
        Data sources
      </EuiButtonEmpty>
    }
    closePopover={[Function]}
    display="inlineBlock"
    hasArrow={true}
    id="dataSourceSViewContextMenuPopover"
    isOpen={false}
    ownFocus={true}
    panelPaddingSize="none"
  >
    <div
      className="euiPopover euiPopover--anchorDownLeft"
      id="dataSourceSViewContextMenuPopover"
    >
      <div
        className="euiPopover__anchor"
      >
        <EuiButtonEmpty
          aria-label="show data sources"
          data-test-subj="dataSourceAggregatedViewInfoButton"
          iconSide="left"
          iconType="database"
          onClick={[Function]}
          size="s"
        >
          <button
            aria-label="show data sources"
            className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--small"
            data-test-subj="dataSourceAggregatedViewInfoButton"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            <EuiButtonContent
              className="euiButtonEmpty__content"
              iconSide="left"
              iconSize="m"
              iconType="database"
              textProps={
                Object {
                  "className": "euiButtonEmpty__text",
                }
              }
            >
              <span
                className="euiButtonContent euiButtonEmpty__content"
              >
                <EuiIcon
                  className="euiButtonContent__icon"
                  color="inherit"
                  size="m"
                  type="database"
                >
                  <span
                    className="euiButtonContent__icon"
                    color="inherit"
                    data-euiicon-type="database"
                    size="m"
                  />
                </EuiIcon>
                <span
                  className="euiButtonEmpty__text"
                >
                  Data sources
                </span>
              </span>
            </EuiButtonContent>
          </button>
        </EuiButtonEmpty>
      </div>
    </div>
  </EuiPopover>
</DataSourceAggregatedView>
`;

exports[`DataSourceAggregatedView should render normally with local cluster and actice selections 1`] = `
<DataSourceAggregatedView
  activeDataSourceIds={
    Array [
      "test1",
    ]
  }
  displayAllCompatibleDataSources={false}
  fullWidth={false}
  hideLocalCluster={false}
  notifications={
    Object {
      "add": [MockFunction],
      "addDanger": [MockFunction],
      "addError": [MockFunction],
      "addInfo": [MockFunction],
      "addSuccess": [MockFunction],
      "addWarning": [MockFunction],
      "get$": [MockFunction],
      "remove": [MockFunction],
    }
  }
  savedObjectsClient={
    Object {
      "find": [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "fields": Array [
                "id",
                "title",
                "auth.type",
              ],
              "perPage": 10000,
              "type": "data-source",
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": Promise {},
          },
        ],
      },
    }
  }
>
  <EuiPopover
    anchorPosition="downLeft"
    button={
      <EuiButtonEmpty
        aria-label="show data sources"
        data-test-subj="dataSourceAggregatedViewInfoButton"
        iconSide="left"
        iconType="database"
        onClick={[Function]}
        size="s"
      >
        Data sources
      </EuiButtonEmpty>
    }
    closePopover={[Function]}
    display="inlineBlock"
    hasArrow={true}
    id="dataSourceSViewContextMenuPopover"
    isOpen={false}
    ownFocus={true}
    panelPaddingSize="none"
  >
    <div
      className="euiPopover euiPopover--anchorDownLeft"
      id="dataSourceSViewContextMenuPopover"
    >
      <div
        className="euiPopover__anchor"
      >
        <EuiButtonEmpty
          aria-label="show data sources"
          data-test-subj="dataSourceAggregatedViewInfoButton"
          iconSide="left"
          iconType="database"
          onClick={[Function]}
          size="s"
        >
          <button
            aria-label="show data sources"
            className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--small"
            data-test-subj="dataSourceAggregatedViewInfoButton"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            <EuiButtonContent
              className="euiButtonEmpty__content"
              iconSide="left"
              iconSize="m"
              iconType="database"
              textProps={
                Object {
                  "className": "euiButtonEmpty__text",
                }
              }
            >
              <span
                className="euiButtonContent euiButtonEmpty__content"
              >
                <EuiIcon
                  className="euiButtonContent__icon"
                  color="inherit"
                  size="m"
                  type="database"
                >
                  <span
                    className="euiButtonContent__icon"
                    color="inherit"
                    data-euiicon-type="database"
                    size="m"
                  />
                </EuiIcon>
                <span
                  className="euiButtonEmpty__text"
                >
                  Data sources
                </span>
              </span>
            </EuiButtonContent>
          </button>
        </EuiButtonEmpty>
      </div>
    </div>
  </EuiPopover>
</DataSourceAggregatedView>
`;

exports[`DataSourceAggregatedView should render normally with local cluster hidden and all options 1`] = `
<DataSourceAggregatedView
  activeDataSourceIds={Array []}
  displayAllCompatibleDataSources={false}
  fullWidth={false}
  hideLocalCluster={true}
  notifications={
    Object {
      "add": [MockFunction],
      "addDanger": [MockFunction],
      "addError": [MockFunction],
      "addInfo": [MockFunction],
      "addSuccess": [MockFunction],
      "addWarning": [MockFunction],
      "get$": [MockFunction],
      "remove": [MockFunction],
    }
  }
  savedObjectsClient={
    Object {
      "find": [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "fields": Array [
                "id",
                "title",
                "auth.type",
              ],
              "perPage": 10000,
              "type": "data-source",
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": Promise {},
          },
        ],
      },
    }
  }
>
  <EuiPopover
    anchorPosition="downLeft"
    button={
      <EuiButtonEmpty
        aria-label="show data sources"
        data-test-subj="dataSourceAggregatedViewInfoButton"
        iconSide="left"
        iconType="database"
        onClick={[Function]}
        size="s"
      >
        Data sources
      </EuiButtonEmpty>
    }
    closePopover={[Function]}
    display="inlineBlock"
    hasArrow={true}
    id="dataSourceSViewContextMenuPopover"
    isOpen={false}
    ownFocus={true}
    panelPaddingSize="none"
  >
    <div
      className="euiPopover euiPopover--anchorDownLeft"
      id="dataSourceSViewContextMenuPopover"
    >
      <div
        className="euiPopover__anchor"
      >
        <EuiButtonEmpty
          aria-label="show data sources"
          data-test-subj="dataSourceAggregatedViewInfoButton"
          iconSide="left"
          iconType="database"
          onClick={[Function]}
          size="s"
        >
          <button
            aria-label="show data sources"
            className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--small"
            data-test-subj="dataSourceAggregatedViewInfoButton"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            <EuiButtonContent
              className="euiButtonEmpty__content"
              iconSide="left"
              iconSize="m"
              iconType="database"
              textProps={
                Object {
                  "className": "euiButtonEmpty__text",
                }
              }
            >
              <span
                className="euiButtonContent euiButtonEmpty__content"
              >
                <EuiIcon
                  className="euiButtonContent__icon"
                  color="inherit"
                  size="m"
                  type="database"
                >
                  <span
                    className="euiButtonContent__icon"
                    color="inherit"
                    data-euiicon-type="database"
                    size="m"
                  />
                </EuiIcon>
                <span
                  className="euiButtonEmpty__text"
                >
                  Data sources
                </span>
              </span>
            </EuiButtonContent>
          </button>
        </EuiButtonEmpty>
      </div>
    </div>
  </EuiPopover>
</DataSourceAggregatedView>
`;

exports[`DataSourceAggregatedView should render normally with local cluster not hidden and all options 1`] = `
<Fragment>
  <EuiPopover
    anchorPosition="downLeft"
    button={
      <EuiButtonEmpty
        aria-label="show data sources"
        data-test-subj="dataSourceAggregatedViewInfoButton"
        iconSide="left"
        iconType="database"
        onClick={[Function]}
        size="s"
      >
        Data sources
      </EuiButtonEmpty>
    }
    closePopover={[Function]}
    display="inlineBlock"
    hasArrow={true}
    id="dataSourceSViewContextMenuPopover"
    isOpen={false}
    ownFocus={true}
    panelPaddingSize="none"
  >
    <EuiContextMenuPanel
      hasFocus={true}
      items={Array []}
      title="Data sources"
    >
      <EuiPanel
        color="transparent"
        paddingSize="s"
        style={
          Object {
            "width": "300px",
          }
        }
      >
        <EuiSpacer
          size="s"
        />
        <EuiSelectable
          data-test-subj="dataSourceSelectable"
          isPreFiltered={false}
          options={
            Array [
              Object {
                "checked": "on",
                "disabled": true,
                "id": "",
                "label": "Local cluster",
              },
              Object {
                "checked": "on",
                "disabled": true,
                "id": "test1",
                "label": "test1",
              },
              Object {
                "checked": "on",
                "disabled": true,
                "id": "test2",
                "label": "test2",
              },
              Object {
                "checked": "on",
                "disabled": true,
                "id": "test3",
                "label": "test3",
              },
            ]
          }
          renderOption={[Function]}
          searchable={false}
          singleSelection={false}
        >
          <Component />
        </EuiSelectable>
      </EuiPanel>
    </EuiContextMenuPanel>
  </EuiPopover>
</Fragment>
`;
