// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataSourceSelectable should filter options if configured 1`] = `
<EuiPopover
  anchorPosition="downLeft"
  button={
    <React.Fragment>
      <EuiIcon
        type="database"
      />
      <EuiButtonEmpty
        aria-label="dataSourceMenuButton"
        className="euiHeaderLink"
        data-test-subj="dataSourceSelectableContextMenuHeaderLink"
        disabled={false}
        iconSide="right"
        iconType="arrowDown"
        onClick={[Function]}
        size="s"
      >
        Local cluster
      </EuiButtonEmpty>
    </React.Fragment>
  }
  closePopover={[Function]}
  display="inlineBlock"
  hasArrow={true}
  id="dataSourceSelectableContextMenuPopover"
  isOpen={false}
  ownFocus={true}
  panelPaddingSize="none"
>
  <EuiContextMenuPanel
    hasFocus={true}
    items={Array []}
  >
    <EuiPanel
      color="transparent"
      paddingSize="s"
    >
      <EuiSpacer
        size="s"
      />
      <EuiSelectable
        aria-label="Search"
        isPreFiltered={false}
        onChange={[Function]}
        options={
          Array [
            Object {
              "id": "",
              "label": "Local cluster",
            },
            Object {
              "id": "test2",
              "label": "test3",
            },
            Object {
              "id": "test3",
              "label": "test3",
            },
          ]
        }
        searchProps={
          Object {
            "placeholder": "Search",
          }
        }
        searchable={true}
        singleSelection={true}
      >
        <Component />
      </EuiSelectable>
    </EuiPanel>
  </EuiContextMenuPanel>
</EuiPopover>
`;

exports[`DataSourceSelectable should render normally with local cluster is hidden 1`] = `
<EuiPopover
  anchorPosition="downLeft"
  button={
    <React.Fragment>
      <EuiIcon
        type="database"
      />
      <EuiButtonEmpty
        aria-label="dataSourceMenuButton"
        className="euiHeaderLink"
        data-test-subj="dataSourceSelectableContextMenuHeaderLink"
        disabled={false}
        iconSide="right"
        iconType="arrowDown"
        onClick={[Function]}
        size="s"
      >
        
      </EuiButtonEmpty>
    </React.Fragment>
  }
  closePopover={[Function]}
  display="inlineBlock"
  hasArrow={true}
  id="dataSourceSelectableContextMenuPopover"
  isOpen={false}
  ownFocus={true}
  panelPaddingSize="none"
>
  <EuiContextMenuPanel
    hasFocus={true}
    items={Array []}
  >
    <EuiPanel
      color="transparent"
      paddingSize="s"
    >
      <EuiSpacer
        size="s"
      />
      <EuiSelectable
        aria-label="Search"
        isPreFiltered={false}
        onChange={[Function]}
        options={Array []}
        searchProps={
          Object {
            "placeholder": "Search",
          }
        }
        searchable={true}
        singleSelection={true}
      >
        <Component />
      </EuiSelectable>
    </EuiPanel>
  </EuiContextMenuPanel>
</EuiPopover>
`;

exports[`DataSourceSelectable should render normally with local cluster not hidden 1`] = `
<EuiPopover
  anchorPosition="downLeft"
  button={
    <React.Fragment>
      <EuiIcon
        type="database"
      />
      <EuiButtonEmpty
        aria-label="dataSourceMenuButton"
        className="euiHeaderLink"
        data-test-subj="dataSourceSelectableContextMenuHeaderLink"
        disabled={false}
        iconSide="right"
        iconType="arrowDown"
        onClick={[Function]}
        size="s"
      >
        Local cluster
      </EuiButtonEmpty>
    </React.Fragment>
  }
  closePopover={[Function]}
  display="inlineBlock"
  hasArrow={true}
  id="dataSourceSelectableContextMenuPopover"
  isOpen={false}
  ownFocus={true}
  panelPaddingSize="none"
>
  <EuiContextMenuPanel
    hasFocus={true}
    items={Array []}
  >
    <EuiPanel
      color="transparent"
      paddingSize="s"
    >
      <EuiSpacer
        size="s"
      />
      <EuiSelectable
        aria-label="Search"
        isPreFiltered={false}
        onChange={[Function]}
        options={Array []}
        searchProps={
          Object {
            "placeholder": "Search",
          }
        }
        searchable={true}
        singleSelection={true}
      >
        <Component />
      </EuiSelectable>
    </EuiPanel>
  </EuiContextMenuPanel>
</EuiPopover>
`;
