// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Available Integration Table View Test Renders nginx integration table view using dummy data 1`] = `
<AvailableIntegrationsTable
  data={
    Object {
      "hits": Array [
        Object {
          "assets": Array [
            Object {
              "extension": "ndjson",
              "name": "nginx",
              "type": "savedObjectBundle",
              "version": "1.0.1",
            },
          ],
          "author": "John Doe",
          "components": Array [
            Object {
              "name": "communication",
              "version": "1.0.0",
            },
            Object {
              "name": "http",
              "version": "1.0.0",
            },
            Object {
              "name": "logs",
              "version": "1.0.0",
            },
          ],
          "description": "Nginx HTTP server collector",
          "displayName": "NginX Dashboard",
          "license": "Apache-2.0",
          "name": "nginx",
          "sourceUrl": "https://github.com/",
          "statics": Object {
            "gallery": Array [
              Object {
                "annotation": "NginX Dashboard",
                "path": "dashboard1.png",
              },
              Object {
                "annotation": "NginX Logo",
                "path": "logo.svg",
              },
            ],
            "logo": Object {
              "annotation": "NginX Logo",
              "path": "logo.svg",
            },
          },
          "type": "logs",
          "version": "1.0.1",
        },
      ],
    }
  }
  http={
    Object {
      "basePath": Object {
        "prepend": [Function],
      },
    }
  }
  isCardView={false}
  loading={false}
  setCardView={[Function]}
>
  <EuiPageContent
    id="availableIntegrationsArea"
  >
    <EuiPanel
      className="euiPageContent"
      id="availableIntegrationsArea"
      paddingSize="l"
      role="main"
    >
      <div
        className="euiPanel euiPanel--paddingLarge euiPanel--borderRadiusMedium euiPanel--plain euiPanel--hasShadow euiPageContent"
        id="availableIntegrationsArea"
        role="main"
      >
        <EuiSpacer>
          <div
            className="euiSpacer euiSpacer--l"
          />
        </EuiSpacer>
        <EuiInMemoryTable
          allowNeutralSort={false}
          columns={
            Array [
              Object {
                "field": "name",
                "name": "Name",
                "render": [Function],
                "sortable": true,
                "truncateText": true,
              },
              Object {
                "field": "description",
                "name": "Description",
                "render": [Function],
                "sortable": true,
                "truncateText": true,
              },
              Object {
                "field": "categories",
                "name": "Categories",
                "render": [Function],
                "sortable": true,
                "truncateText": true,
              },
            ]
          }
          isSelectable={true}
          itemId="id"
          items={
            Array [
              Object {
                "assets": Array [
                  Object {
                    "extension": "ndjson",
                    "name": "nginx",
                    "type": "savedObjectBundle",
                    "version": "1.0.1",
                  },
                ],
                "author": "John Doe",
                "components": Array [
                  Object {
                    "name": "communication",
                    "version": "1.0.0",
                  },
                  Object {
                    "name": "http",
                    "version": "1.0.0",
                  },
                  Object {
                    "name": "logs",
                    "version": "1.0.0",
                  },
                ],
                "description": "Nginx HTTP server collector",
                "displayName": "NginX Dashboard",
                "license": "Apache-2.0",
                "name": "nginx",
                "sourceUrl": "https://github.com/",
                "statics": Object {
                  "gallery": Array [
                    Object {
                      "annotation": "NginX Dashboard",
                      "path": "dashboard1.png",
                    },
                    Object {
                      "annotation": "NginX Logo",
                      "path": "logo.svg",
                    },
                  ],
                  "logo": Object {
                    "annotation": "NginX Logo",
                    "path": "logo.svg",
                  },
                },
                "type": "logs",
                "version": "1.0.1",
              },
            ]
          }
          loading={false}
          pagination={
            Object {
              "initialPageSize": 10,
              "pageSizeOptions": Array [
                5,
                10,
                15,
              ],
            }
          }
          responsive={true}
          search={
            Object {
              "box": Object {
                "incremental": true,
              },
              "toolsRight": <EuiFlexGroup>
                <EuiFlexItem />
                <EuiFlexItem>
                  <EuiButtonGroup
                    idSelected="0"
                    isIconOnly={true}
                    legend="Text align"
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "iconType": "list",
                          "id": "0",
                          "label": "list",
                        },
                        Object {
                          "iconType": "grid",
                          "id": "1",
                          "label": "grid",
                        },
                      ]
                    }
                  />
                </EuiFlexItem>
              </EuiFlexGroup>,
            }
          }
          tableLayout="auto"
        >
          <div>
            <EuiSearchBar
              box={
                Object {
                  "incremental": true,
                }
              }
              onChange={[Function]}
              toolsRight={
                <EuiFlexGroup>
                  <EuiFlexItem />
                  <EuiFlexItem>
                    <EuiButtonGroup
                      idSelected="0"
                      isIconOnly={true}
                      legend="Text align"
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "iconType": "list",
                            "id": "0",
                            "label": "list",
                          },
                          Object {
                            "iconType": "grid",
                            "id": "1",
                            "label": "grid",
                          },
                        ]
                      }
                    />
                  </EuiFlexItem>
                </EuiFlexGroup>
              }
            >
              <EuiFlexGroup
                alignItems="center"
                gutterSize="m"
                wrap={true}
              >
                <div
                  className="euiFlexGroup euiFlexGroup--gutterMedium euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow euiFlexGroup--responsive euiFlexGroup--wrap"
                >
                  <EuiFlexItem
                    className="euiSearchBar__searchHolder"
                    grow={true}
                  >
                    <div
                      className="euiFlexItem euiSearchBar__searchHolder"
                    >
                      <EuiSearchBox
                        incremental={true}
                        isInvalid={false}
                        onSearch={[Function]}
                        placeholder="Search..."
                        query=""
                      >
                        <EuiFieldSearch
                          aria-label="This is a search bar. As you type, the results lower in the page will automatically filter."
                          compressed={false}
                          defaultValue=""
                          fullWidth={true}
                          incremental={true}
                          inputRef={[Function]}
                          isClearable={true}
                          isInvalid={false}
                          isLoading={false}
                          onSearch={[Function]}
                          placeholder="Search..."
                        >
                          <EuiFormControlLayout
                            compressed={false}
                            fullWidth={true}
                            icon="search"
                            isLoading={false}
                          >
                            <div
                              className="euiFormControlLayout euiFormControlLayout--fullWidth"
                            >
                              <div
                                className="euiFormControlLayout__childrenWrapper"
                              >
                                <EuiValidatableControl
                                  isInvalid={false}
                                >
                                  <input
                                    aria-label="This is a search bar. As you type, the results lower in the page will automatically filter."
                                    className="euiFieldSearch euiFieldSearch--fullWidth"
                                    defaultValue=""
                                    onKeyUp={[Function]}
                                    placeholder="Search..."
                                    type="search"
                                  />
                                </EuiValidatableControl>
                                <EuiFormControlLayoutIcons
                                  compressed={false}
                                  icon="search"
                                  isLoading={false}
                                >
                                  <div
                                    className="euiFormControlLayoutIcons"
                                  >
                                    <EuiFormControlLayoutCustomIcon
                                      size="m"
                                      type="search"
                                    >
                                      <span
                                        className="euiFormControlLayoutCustomIcon"
                                      >
                                        <EuiIcon
                                          aria-hidden="true"
                                          className="euiFormControlLayoutCustomIcon__icon"
                                          size="m"
                                          type="search"
                                        >
                                          <span
                                            aria-hidden="true"
                                            className="euiFormControlLayoutCustomIcon__icon"
                                            data-euiicon-type="search"
                                            size="m"
                                          />
                                        </EuiIcon>
                                      </span>
                                    </EuiFormControlLayoutCustomIcon>
                                  </div>
                                </EuiFormControlLayoutIcons>
                              </div>
                            </div>
                          </EuiFormControlLayout>
                        </EuiFieldSearch>
                      </EuiSearchBox>
                    </div>
                  </EuiFlexItem>
                  <EuiFlexItem
                    grow={false}
                  >
                    <div
                      className="euiFlexItem euiFlexItem--flexGrowZero"
                    >
                      <EuiFlexGroup>
                        <div
                          className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                        >
                          <EuiFlexItem>
                            <div
                              className="euiFlexItem"
                            />
                          </EuiFlexItem>
                          <EuiFlexItem>
                            <div
                              className="euiFlexItem"
                            >
                              <EuiButtonGroup
                                idSelected="0"
                                isIconOnly={true}
                                legend="Text align"
                                onChange={[Function]}
                                options={
                                  Array [
                                    Object {
                                      "iconType": "list",
                                      "id": "0",
                                      "label": "list",
                                    },
                                    Object {
                                      "iconType": "grid",
                                      "id": "1",
                                      "label": "grid",
                                    },
                                  ]
                                }
                              >
                                <fieldset
                                  className="euiButtonGroup euiButtonGroup--small euiButtonGroup--text"
                                  disabled={false}
                                >
                                  <EuiScreenReaderOnly>
                                    <legend
                                      className="euiScreenReaderOnly"
                                    >
                                      Text align
                                    </legend>
                                  </EuiScreenReaderOnly>
                                  <div
                                    className="euiButtonGroup__buttons"
                                  >
                                    <EuiButtonGroupButton
                                      color="text"
                                      element="label"
                                      iconType="list"
                                      id="0"
                                      isDisabled={false}
                                      isIconOnly={true}
                                      isSelected={true}
                                      key="0"
                                      label="list"
                                      name="generated-id"
                                      onChange={[Function]}
                                      size="s"
                                    >
                                      <EuiButtonDisplay
                                        baseClassName="euiButtonGroupButton"
                                        className="euiButtonGroupButton-isSelected euiButtonGroupButton-isIconOnly"
                                        color="text"
                                        element="label"
                                        fill={true}
                                        htmlFor="generated-id"
                                        iconType="list"
                                        isDisabled={false}
                                        onClick={[Function]}
                                        size="s"
                                        textProps={
                                          Object {
                                            "className": "euiScreenReaderOnly",
                                            "data-text": "list",
                                            "ref": [Function],
                                            "title": "list",
                                          }
                                        }
                                      >
                                        <label
                                          className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small euiButtonGroupButton--fill euiButtonGroupButton-isSelected euiButtonGroupButton-isIconOnly"
                                          disabled={false}
                                          htmlFor="generated-id"
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "minWidth": undefined,
                                            }
                                          }
                                        >
                                          <EuiButtonContent
                                            className="euiButton__content"
                                            iconSide="left"
                                            iconType="list"
                                            textProps={
                                              Object {
                                                "className": "euiButton__text euiScreenReaderOnly",
                                                "data-text": "list",
                                                "ref": [Function],
                                                "title": "list",
                                              }
                                            }
                                          >
                                            <span
                                              className="euiButtonContent euiButton__content"
                                            >
                                              <EuiIcon
                                                className="euiButtonContent__icon"
                                                color="inherit"
                                                size="m"
                                                title="list"
                                                type="list"
                                              >
                                                <span
                                                  className="euiButtonContent__icon"
                                                  color="inherit"
                                                  data-euiicon-type="list"
                                                  size="m"
                                                  title="list"
                                                />
                                              </EuiIcon>
                                              <span
                                                className="euiButton__text euiScreenReaderOnly"
                                                data-text="list"
                                                title="list"
                                              >
                                                <input
                                                  checked={true}
                                                  className="euiScreenReaderOnly"
                                                  data-test-subj="0"
                                                  disabled={false}
                                                  id="generated-id"
                                                  name="generated-id"
                                                  onChange={[Function]}
                                                  type="radio"
                                                />
                                                list
                                              </span>
                                            </span>
                                          </EuiButtonContent>
                                        </label>
                                      </EuiButtonDisplay>
                                    </EuiButtonGroupButton>
                                    <EuiButtonGroupButton
                                      color="text"
                                      element="label"
                                      iconType="grid"
                                      id="1"
                                      isDisabled={false}
                                      isIconOnly={true}
                                      isSelected={false}
                                      key="1"
                                      label="grid"
                                      name="generated-id"
                                      onChange={[Function]}
                                      size="s"
                                    >
                                      <EuiButtonDisplay
                                        baseClassName="euiButtonGroupButton"
                                        className="euiButtonGroupButton-isIconOnly"
                                        color="text"
                                        element="label"
                                        fill={false}
                                        htmlFor="generated-id"
                                        iconType="grid"
                                        isDisabled={false}
                                        onClick={[Function]}
                                        size="s"
                                        textProps={
                                          Object {
                                            "className": "euiScreenReaderOnly",
                                            "data-text": "grid",
                                            "ref": [Function],
                                            "title": "grid",
                                          }
                                        }
                                      >
                                        <label
                                          className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton--small euiButtonGroupButton-isIconOnly"
                                          disabled={false}
                                          htmlFor="generated-id"
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "minWidth": undefined,
                                            }
                                          }
                                        >
                                          <EuiButtonContent
                                            className="euiButton__content"
                                            iconSide="left"
                                            iconType="grid"
                                            textProps={
                                              Object {
                                                "className": "euiButton__text euiScreenReaderOnly",
                                                "data-text": "grid",
                                                "ref": [Function],
                                                "title": "grid",
                                              }
                                            }
                                          >
                                            <span
                                              className="euiButtonContent euiButton__content"
                                            >
                                              <EuiIcon
                                                className="euiButtonContent__icon"
                                                color="inherit"
                                                size="m"
                                                title="grid"
                                                type="grid"
                                              >
                                                <span
                                                  className="euiButtonContent__icon"
                                                  color="inherit"
                                                  data-euiicon-type="grid"
                                                  size="m"
                                                  title="grid"
                                                />
                                              </EuiIcon>
                                              <span
                                                className="euiButton__text euiScreenReaderOnly"
                                                data-text="grid"
                                                title="grid"
                                              >
                                                <input
                                                  checked={false}
                                                  className="euiScreenReaderOnly"
                                                  data-test-subj="1"
                                                  disabled={false}
                                                  id="generated-id"
                                                  name="generated-id"
                                                  onChange={[Function]}
                                                  type="radio"
                                                />
                                                grid
                                              </span>
                                            </span>
                                          </EuiButtonContent>
                                        </label>
                                      </EuiButtonDisplay>
                                    </EuiButtonGroupButton>
                                  </div>
                                </fieldset>
                              </EuiButtonGroup>
                            </div>
                          </EuiFlexItem>
                        </div>
                      </EuiFlexGroup>
                    </div>
                  </EuiFlexItem>
                </div>
              </EuiFlexGroup>
            </EuiSearchBar>
            <EuiSpacer
              size="l"
            >
              <div
                className="euiSpacer euiSpacer--l"
              />
            </EuiSpacer>
            <EuiBasicTable
              columns={
                Array [
                  Object {
                    "field": "name",
                    "name": "Name",
                    "render": [Function],
                    "sortable": true,
                    "truncateText": true,
                  },
                  Object {
                    "field": "description",
                    "name": "Description",
                    "render": [Function],
                    "sortable": true,
                    "truncateText": true,
                  },
                  Object {
                    "field": "categories",
                    "name": "Categories",
                    "render": [Function],
                    "sortable": true,
                    "truncateText": true,
                  },
                ]
              }
              isSelectable={true}
              itemId="id"
              items={
                Array [
                  Object {
                    "assets": Array [
                      Object {
                        "extension": "ndjson",
                        "name": "nginx",
                        "type": "savedObjectBundle",
                        "version": "1.0.1",
                      },
                    ],
                    "author": "John Doe",
                    "components": Array [
                      Object {
                        "name": "communication",
                        "version": "1.0.0",
                      },
                      Object {
                        "name": "http",
                        "version": "1.0.0",
                      },
                      Object {
                        "name": "logs",
                        "version": "1.0.0",
                      },
                    ],
                    "description": "Nginx HTTP server collector",
                    "displayName": "NginX Dashboard",
                    "license": "Apache-2.0",
                    "name": "nginx",
                    "sourceUrl": "https://github.com/",
                    "statics": Object {
                      "gallery": Array [
                        Object {
                          "annotation": "NginX Dashboard",
                          "path": "dashboard1.png",
                        },
                        Object {
                          "annotation": "NginX Logo",
                          "path": "logo.svg",
                        },
                      ],
                      "logo": Object {
                        "annotation": "NginX Logo",
                        "path": "logo.svg",
                      },
                    },
                    "type": "logs",
                    "version": "1.0.1",
                  },
                ]
              }
              loading={false}
              noItemsMessage="No items found"
              onChange={[Function]}
              pagination={
                Object {
                  "hidePerPageOptions": undefined,
                  "pageIndex": 0,
                  "pageSize": 10,
                  "pageSizeOptions": Array [
                    5,
                    10,
                    15,
                  ],
                  "totalItemCount": 1,
                }
              }
              responsive={true}
              tableLayout="auto"
            >
              <div
                className="euiBasicTable"
              >
                <div>
                  <EuiTableHeaderMobile>
                    <div
                      className="euiTableHeaderMobile"
                    >
                      <EuiFlexGroup
                        alignItems="baseline"
                        justifyContent="spaceBetween"
                        responsive={false}
                      >
                        <div
                          className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsBaseline euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow"
                        >
                          <EuiFlexItem
                            grow={false}
                          >
                            <div
                              className="euiFlexItem euiFlexItem--flexGrowZero"
                            />
                          </EuiFlexItem>
                          <EuiFlexItem
                            grow={false}
                          >
                            <div
                              className="euiFlexItem euiFlexItem--flexGrowZero"
                            />
                          </EuiFlexItem>
                        </div>
                      </EuiFlexGroup>
                    </div>
                  </EuiTableHeaderMobile>
                  <EuiTable
                    id="__table_generated-id"
                    responsive={true}
                    tableLayout="auto"
                  >
                    <table
                      className="euiTable euiTable--responsive euiTable--auto"
                      id="__table_generated-id"
                      tabIndex={-1}
                    >
                      <EuiScreenReaderOnly>
                        <caption
                          className="euiScreenReaderOnly euiTableCaption"
                        >
                          <EuiDelayRender
                            delay={500}
                          />
                        </caption>
                      </EuiScreenReaderOnly>
                      <EuiTableHeader>
                        <thead>
                          <tr>
                            <EuiTableHeaderCell
                              align="left"
                              data-test-subj="tableHeaderCell_name_0"
                              key="_data_h_name_0"
                            >
                              <th
                                className="euiTableHeaderCell"
                                data-test-subj="tableHeaderCell_name_0"
                                role="columnheader"
                                scope="col"
                                style={
                                  Object {
                                    "width": undefined,
                                  }
                                }
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  showSortMsg={false}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Name",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Name"
                                        >
                                          Name
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </th>
                            </EuiTableHeaderCell>
                            <EuiTableHeaderCell
                              align="left"
                              data-test-subj="tableHeaderCell_description_1"
                              key="_data_h_description_1"
                            >
                              <th
                                className="euiTableHeaderCell"
                                data-test-subj="tableHeaderCell_description_1"
                                role="columnheader"
                                scope="col"
                                style={
                                  Object {
                                    "width": undefined,
                                  }
                                }
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  showSortMsg={false}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Description",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Description"
                                        >
                                          Description
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </th>
                            </EuiTableHeaderCell>
                            <EuiTableHeaderCell
                              align="left"
                              data-test-subj="tableHeaderCell_categories_2"
                              key="_data_h_categories_2"
                            >
                              <th
                                className="euiTableHeaderCell"
                                data-test-subj="tableHeaderCell_categories_2"
                                role="columnheader"
                                scope="col"
                                style={
                                  Object {
                                    "width": undefined,
                                  }
                                }
                              >
                                <CellContents
                                  className="euiTableCellContent"
                                  showSortMsg={false}
                                >
                                  <span
                                    className="euiTableCellContent"
                                  >
                                    <EuiInnerText>
                                      <EuiI18n
                                        default="{innerText}; {description}"
                                        token="euiTableHeaderCell.titleTextWithDesc"
                                        values={
                                          Object {
                                            "description": undefined,
                                            "innerText": "Categories",
                                          }
                                        }
                                      >
                                        <span
                                          className="euiTableCellContent__text"
                                          title="Categories"
                                        >
                                          Categories
                                        </span>
                                      </EuiI18n>
                                    </EuiInnerText>
                                  </span>
                                </CellContents>
                              </th>
                            </EuiTableHeaderCell>
                          </tr>
                        </thead>
                      </EuiTableHeader>
                      <EuiTableBody
                        bodyRef={[Function]}
                      >
                        <tbody>
                          <EuiTableRow
                            isSelectable={true}
                            isSelected={false}
                          >
                            <tr
                              className="euiTableRow euiTableRow-isSelectable"
                            >
                              <EuiTableRowCell
                                align="left"
                                key="_data_column_name_0_0"
                                mobileOptions={
                                  Object {
                                    "header": "Name",
                                    "render": undefined,
                                  }
                                }
                                setScopeRow={false}
                                textOnly={false}
                                truncateText={true}
                              >
                                <td
                                  className="euiTableRowCell"
                                  style={
                                    Object {
                                      "width": undefined,
                                    }
                                  }
                                >
                                  <div
                                    className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                  >
                                    Name
                                  </div>
                                  <div
                                    className="euiTableCellContent euiTableCellContent--truncateText euiTableCellContent--overflowingContent"
                                  >
                                    <EuiLink
                                      className=""
                                      data-test-subj="nginxIntegrationLink"
                                      href="/app/integrations#/available/nginx"
                                      key=".0"
                                    >
                                      <a
                                        className="euiLink euiLink--primary"
                                        data-test-subj="nginxIntegrationLink"
                                        href="/app/integrations#/available/nginx"
                                        rel="noreferrer"
                                      >
                                        NginX Dashboard
                                      </a>
                                    </EuiLink>
                                  </div>
                                </td>
                              </EuiTableRowCell>
                              <EuiTableRowCell
                                align="left"
                                key="_data_column_description_0_1"
                                mobileOptions={
                                  Object {
                                    "header": "Description",
                                    "render": undefined,
                                  }
                                }
                                setScopeRow={false}
                                textOnly={false}
                                truncateText={true}
                              >
                                <td
                                  className="euiTableRowCell"
                                  style={
                                    Object {
                                      "width": undefined,
                                    }
                                  }
                                >
                                  <div
                                    className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                  >
                                    Description
                                  </div>
                                  <div
                                    className="euiTableCellContent euiTableCellContent--truncateText euiTableCellContent--overflowingContent"
                                  >
                                    <EuiText
                                      className=""
                                      data-test-subj="nginxIntegrationDescription"
                                      key=".0"
                                    >
                                      <div
                                        className="euiText euiText--medium"
                                        data-test-subj="nginxIntegrationDescription"
                                      >
                                        Nginx HTTP server collector
                                      </div>
                                    </EuiText>
                                  </div>
                                </td>
                              </EuiTableRowCell>
                              <EuiTableRowCell
                                align="left"
                                key="_data_column_categories_0_2"
                                mobileOptions={
                                  Object {
                                    "header": "Categories",
                                    "render": undefined,
                                  }
                                }
                                setScopeRow={false}
                                textOnly={false}
                                truncateText={true}
                              >
                                <td
                                  className="euiTableRowCell"
                                  style={
                                    Object {
                                      "width": undefined,
                                    }
                                  }
                                >
                                  <div
                                    className="euiTableRowCell__mobileHeader euiTableRowCell--hideForDesktop"
                                  >
                                    Categories
                                  </div>
                                  <div
                                    className="euiTableCellContent euiTableCellContent--truncateText euiTableCellContent--overflowingContent"
                                  >
                                    <EuiBadgeGroup
                                      className=""
                                      key=".0"
                                    >
                                      <div
                                        className="euiBadgeGroup euiBadgeGroup--gutterExtraSmall"
                                      />
                                    </EuiBadgeGroup>
                                  </div>
                                </td>
                              </EuiTableRowCell>
                            </tr>
                          </EuiTableRow>
                        </tbody>
                      </EuiTableBody>
                    </table>
                  </EuiTable>
                </div>
                <PaginationBar
                  aria-controls="__table_generated-id"
                  onPageChange={[Function]}
                  onPageSizeChange={[Function]}
                  pagination={
                    Object {
                      "hidePerPageOptions": undefined,
                      "pageIndex": 0,
                      "pageSize": 10,
                      "pageSizeOptions": Array [
                        5,
                        10,
                        15,
                      ],
                      "totalItemCount": 1,
                    }
                  }
                >
                  <div>
                    <EuiSpacer
                      size="m"
                    >
                      <div
                        className="euiSpacer euiSpacer--m"
                      />
                    </EuiSpacer>
                    <EuiTablePagination
                      activePage={0}
                      aria-controls="__table_generated-id"
                      itemsPerPage={10}
                      itemsPerPageOptions={
                        Array [
                          5,
                          10,
                          15,
                        ]
                      }
                      onChangeItemsPerPage={[Function]}
                      onChangePage={[Function]}
                      pageCount={1}
                    >
                      <EuiFlexGroup
                        alignItems="center"
                        justifyContent="spaceBetween"
                        responsive={false}
                      >
                        <div
                          className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow"
                        >
                          <EuiFlexItem
                            grow={false}
                          >
                            <div
                              className="euiFlexItem euiFlexItem--flexGrowZero"
                            >
                              <EuiPopover
                                anchorPosition="upRight"
                                button={
                                  <EuiButtonEmpty
                                    color="text"
                                    data-test-subj="tablePaginationPopoverButton"
                                    iconSide="right"
                                    iconType="arrowDown"
                                    onClick={[Function]}
                                    size="xs"
                                  >
                                    <EuiI18n
                                      default="Rows per page"
                                      token="euiTablePagination.rowsPerPage"
                                    />
                                    : 
                                    10
                                  </EuiButtonEmpty>
                                }
                                closePopover={[Function]}
                                display="inlineBlock"
                                hasArrow={true}
                                isOpen={false}
                                ownFocus={true}
                                panelPaddingSize="none"
                              >
                                <div
                                  className="euiPopover euiPopover--anchorUpRight"
                                >
                                  <div
                                    className="euiPopover__anchor"
                                  >
                                    <EuiButtonEmpty
                                      color="text"
                                      data-test-subj="tablePaginationPopoverButton"
                                      iconSide="right"
                                      iconType="arrowDown"
                                      onClick={[Function]}
                                      size="xs"
                                    >
                                      <button
                                        className="euiButtonEmpty euiButtonEmpty--text euiButtonEmpty--xSmall"
                                        data-test-subj="tablePaginationPopoverButton"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <EuiButtonContent
                                          className="euiButtonEmpty__content"
                                          iconSide="right"
                                          iconSize="s"
                                          iconType="arrowDown"
                                          textProps={
                                            Object {
                                              "className": "euiButtonEmpty__text",
                                            }
                                          }
                                        >
                                          <span
                                            className="euiButtonContent euiButtonContent--iconRight euiButtonEmpty__content"
                                          >
                                            <EuiIcon
                                              className="euiButtonContent__icon"
                                              color="inherit"
                                              size="s"
                                              type="arrowDown"
                                            >
                                              <span
                                                className="euiButtonContent__icon"
                                                color="inherit"
                                                data-euiicon-type="arrowDown"
                                                size="s"
                                              />
                                            </EuiIcon>
                                            <span
                                              className="euiButtonEmpty__text"
                                            >
                                              <EuiI18n
                                                default="Rows per page"
                                                token="euiTablePagination.rowsPerPage"
                                              >
                                                Rows per page
                                              </EuiI18n>
                                              : 
                                              10
                                            </span>
                                          </span>
                                        </EuiButtonContent>
                                      </button>
                                    </EuiButtonEmpty>
                                  </div>
                                </div>
                              </EuiPopover>
                            </div>
                          </EuiFlexItem>
                          <EuiFlexItem
                            grow={false}
                          >
                            <div
                              className="euiFlexItem euiFlexItem--flexGrowZero"
                            >
                              <EuiPagination
                                activePage={0}
                                aria-controls="__table_generated-id"
                                onPageClick={[Function]}
                                pageCount={1}
                              >
                                <nav
                                  className="euiPagination"
                                >
                                  <EuiI18n
                                    default="Previous page, {page}"
                                    token="euiPagination.previousPage"
                                    values={
                                      Object {
                                        "page": 0,
                                      }
                                    }
                                  >
                                    <EuiI18n
                                      default="Previous page"
                                      token="euiPagination.disabledPreviousPage"
                                    >
                                      <EuiButtonIcon
                                        aria-label="Previous page"
                                        color="text"
                                        data-test-subj="pagination-button-previous"
                                        disabled={true}
                                        iconType="arrowLeft"
                                        onClick={[Function]}
                                      >
                                        <button
                                          aria-label="Previous page"
                                          className="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall"
                                          data-test-subj="pagination-button-previous"
                                          disabled={true}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <EuiIcon
                                            aria-hidden="true"
                                            className="euiButtonIcon__icon"
                                            color="inherit"
                                            size="m"
                                            type="arrowLeft"
                                          >
                                            <span
                                              aria-hidden="true"
                                              className="euiButtonIcon__icon"
                                              color="inherit"
                                              data-euiicon-type="arrowLeft"
                                              size="m"
                                            />
                                          </EuiIcon>
                                        </button>
                                      </EuiButtonIcon>
                                    </EuiI18n>
                                  </EuiI18n>
                                  <ul
                                    className="euiPagination__list"
                                  >
                                    <PaginationButton
                                      key="0"
                                      pageIndex={0}
                                    >
                                      <li
                                        className="euiPagination__item"
                                      >
                                        <EuiPaginationButton
                                          aria-controls="__table_generated-id"
                                          hideOnMobile={true}
                                          isActive={true}
                                          onClick={[Function]}
                                          pageIndex={0}
                                          totalPages={1}
                                        >
                                          <EuiI18n
                                            default="Page {page} of {totalPages}"
                                            token="euiPaginationButton.longPageString"
                                            values={
                                              Object {
                                                "page": 1,
                                                "totalPages": 1,
                                              }
                                            }
                                          >
                                            <EuiI18n
                                              default="Page {page}"
                                              token="euiPaginationButton.shortPageString"
                                              values={
                                                Object {
                                                  "page": 1,
                                                }
                                              }
                                            >
                                              <EuiButtonEmpty
                                                aria-controls="__table_generated-id"
                                                aria-current={true}
                                                aria-label="Page 1 of 1"
                                                className="euiPaginationButton euiPaginationButton-isActive euiPaginationButton--hideOnMobile"
                                                color="text"
                                                data-test-subj="pagination-button-0"
                                                href="#__table_generated-id"
                                                isDisabled={true}
                                                onClick={[Function]}
                                                size="s"
                                              >
                                                <button
                                                  aria-controls="__table_generated-id"
                                                  aria-current={true}
                                                  aria-label="Page 1 of 1"
                                                  className="euiButtonEmpty euiButtonEmpty--text euiButtonEmpty--small euiButtonEmpty-isDisabled euiPaginationButton euiPaginationButton-isActive euiPaginationButton--hideOnMobile"
                                                  data-test-subj="pagination-button-0"
                                                  disabled={true}
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <EuiButtonContent
                                                    className="euiButtonEmpty__content"
                                                    iconSide="left"
                                                    iconSize="m"
                                                    textProps={
                                                      Object {
                                                        "className": "euiButtonEmpty__text",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="euiButtonContent euiButtonEmpty__content"
                                                    >
                                                      <span
                                                        className="euiButtonEmpty__text"
                                                      >
                                                        1
                                                      </span>
                                                    </span>
                                                  </EuiButtonContent>
                                                </button>
                                              </EuiButtonEmpty>
                                            </EuiI18n>
                                          </EuiI18n>
                                        </EuiPaginationButton>
                                      </li>
                                    </PaginationButton>
                                  </ul>
                                  <EuiI18n
                                    default="Next page, {page}"
                                    token="euiPagination.nextPage"
                                    values={
                                      Object {
                                        "page": 2,
                                      }
                                    }
                                  >
                                    <EuiI18n
                                      default="Next page"
                                      token="euiPagination.disabledNextPage"
                                    >
                                      <EuiButtonIcon
                                        aria-label="Next page"
                                        color="text"
                                        data-test-subj="pagination-button-next"
                                        disabled={true}
                                        iconType="arrowRight"
                                        onClick={[Function]}
                                      >
                                        <button
                                          aria-label="Next page"
                                          className="euiButtonIcon euiButtonIcon--text euiButtonIcon--empty euiButtonIcon--xSmall"
                                          data-test-subj="pagination-button-next"
                                          disabled={true}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <EuiIcon
                                            aria-hidden="true"
                                            className="euiButtonIcon__icon"
                                            color="inherit"
                                            size="m"
                                            type="arrowRight"
                                          >
                                            <span
                                              aria-hidden="true"
                                              className="euiButtonIcon__icon"
                                              color="inherit"
                                              data-euiicon-type="arrowRight"
                                              size="m"
                                            />
                                          </EuiIcon>
                                        </button>
                                      </EuiButtonIcon>
                                    </EuiI18n>
                                  </EuiI18n>
                                </nav>
                              </EuiPagination>
                            </div>
                          </EuiFlexItem>
                        </div>
                      </EuiFlexGroup>
                    </EuiTablePagination>
                  </div>
                </PaginationBar>
              </div>
            </EuiBasicTable>
          </div>
        </EuiInMemoryTable>
      </div>
    </EuiPanel>
  </EuiPageContent>
</AvailableIntegrationsTable>
`;
